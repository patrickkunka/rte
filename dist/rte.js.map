{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b39cd67f5cfd1a0f892d","webpack:///./src/factory.js","webpack:///./src/RichTextEditor.js","webpack:///./src/Dom.js","webpack:///./src/Util.js","webpack:///./src/models/Markup.js","webpack:///./src/models/Node.js","webpack:///./src/models/Caret.js","webpack:///./src/models/Range.js","webpack:///./src/TreeBuilder.js","webpack:///./src/Renderer.js","webpack:///./src/data.json","webpack:///./src/models/State.js","webpack:///./src/Editor.js"],"names":["factory","el","richTextEditor","attach","module","exports","RichTextEditor","dom","state","root","history","initialState","extend","markups","map","markup","buildModelFromState","render","bindEvents","innerHTML","renderNodes","childNodes","addEventListener","handleKeypress","bind","e","selection","window","getSelection","range","getRangeFromSelection","characters","key","fromIndex","from","node","start","offset","toIndex","to","newState","insertCharacters","push","positionCaret","preventDefault","path","unshift","index","parentElement","i","anchorPath","getPathFromNode","anchorNode","virtualAnchorNode","getNodeByPath","extentPath","virtualExtentNode","isRtl","isCollapsed","extentNode","anchorOffset","extentOffset","end","document","createRange","virtualNode","length","setStart","collapse","removeAllRanges","addRange","text","buildTree","Dom","Object","seal","Util","target","source","deep","sourceKeys","TypeError","Array","isArray","keys","descriptor","getOwnPropertyDescriptor","get","arr","reduce","prev","curr","concat","fn","interval","immediate","timeoutId","args","arguments","later","apply","clearTimeout","setTimeout","last","now","Date","difference","Infinity","selector","includeSelf","parent","parentNode","matches","body","selectors","split","childSelectors","children","tempId","id","pop","querySelectorAll","join","removeAttribute","includeNonElements","previousSibling","previousElementSibling","Markup","tag","defineProperties","type","indexOf","isBlock","isInline","Node","Caret","Range","TreeBuilder","startIndex","lastSibling","slice","getNode","lastIndex","Renderer","nodes","renderNode","html","State","Editor","totalDeleted","totalAdded","adjustment","adjustMarkups","newMarkups","newMarkup"],"mappings":"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","file":"rte.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rte\"] = factory();\n\telse\n\t\troot[\"rte\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b39cd67f5cfd1a0f892d","import RichTextEditor from './RichTextEditor';\nimport data           from './data.json';\n\nfunction factory(el) {\n    const richTextEditor = new RichTextEditor();\n\n    richTextEditor.attach(el, data);\n\n    return richTextEditor;\n}\n\nmodule.exports = factory;\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","import Dom          from './Dom';\nimport Util         from './Util';\nimport Markup       from './models/Markup';\nimport Node         from './models/Node';\nimport Caret        from './models/Caret';\nimport Range        from './models/Range';\nimport State        from './models/State';\nimport Editor       from './Editor';\nimport TreeBuilder  from './TreeBuilder';\nimport Renderer     from './Renderer';\n\nclass RichTextEditor {\n    constructor() {\n        this.dom        = new Dom();\n        this.state      = new State();\n        this.root       = null;\n        this.history    = [];\n    }\n\n    attach(el, initialState) {\n        this.dom.root = el;\n\n        Util.extend(this.state, initialState);\n\n        this.state.markups = this.state.markups.map(markup => new Markup(markup));\n\n        this.root = RichTextEditor.buildModelFromState(this.state);\n\n        this.render();\n\n        this.bindEvents();\n    }\n\n    render() {\n        this.dom.root.innerHTML = Renderer.renderNodes(this.root.childNodes);\n    }\n\n    bindEvents() {\n        this.dom.root.addEventListener('keypress', this.handleKeypress.bind(this));\n    }\n\n    handleKeypress(e) {\n        const selection = window.getSelection();\n        const range = this.getRangeFromSelection(selection);\n        const characters = e.key;\n        const fromIndex = range.from.node.start + range.from.offset;\n        const toIndex = range.to.node.start + range.to.offset;\n\n        const newState = Editor.insertCharacters(this.state, characters, fromIndex, toIndex);\n\n        this.history.push(this.state);\n\n        this.state = newState;\n\n        this.root = RichTextEditor.buildModelFromState(this.state);\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n\n        e.preventDefault();\n    }\n\n    getPathFromNode(node) {\n        const path = [];\n\n        while (node && node !== this.dom.root) {\n            path.unshift(Util.index(node, true));\n\n            node = node.parentElement;\n        }\n\n        return path;\n    }\n\n    getNodeByPath(path, root) {\n        let node = root;\n        let index = -1;\n        let i = 0;\n\n        while (typeof (index = path[i]) === 'number') {\n            node = node.childNodes[index];\n\n            i++;\n        }\n\n        return node || null;\n    }\n\n    getRangeFromSelection(selection) {\n        const anchorPath = this.getPathFromNode(selection.anchorNode);\n        const virtualAnchorNode = this.getNodeByPath(anchorPath, this.root);\n        const from = new Caret();\n        const to = new Caret();\n\n        let extentPath = anchorPath;\n        let virtualExtentNode = virtualAnchorNode;\n        let isRtl = false;\n\n        if (!selection.isCollapsed) {\n            extentPath = this.getPathFromNode(selection.extentNode);\n            virtualExtentNode = this.getNodeByPath(extentPath, this.root);\n        }\n\n        isRtl = extentPath < anchorPath || !(extentPath > anchorPath) && selection.anchorOffset > selection.extentOffset;\n\n        from.node   = to.node = isRtl ? virtualExtentNode : virtualAnchorNode;\n        from.offset = to.offset = isRtl ? selection.extentOffset : selection.anchorOffset;\n        from.path   = to.path = isRtl ? extentPath : anchorPath;\n\n        if (!selection.isCollapsed) {\n            to.node     = isRtl ? virtualAnchorNode : virtualExtentNode;\n            to.offset   = isRtl ? selection.anchorOffset : selection.extentOffset;\n            to.path     = isRtl ? anchorPath : extentPath;\n        }\n\n        return new Range(from, to);\n    }\n\n    positionCaret([start, end]) {\n        const range = document.createRange();\n        const selection = window.getSelection();\n\n        let childNodes = this.root.childNodes;\n        let virtualNode = null;\n        let node = null;\n        let offset = -1;\n\n        for (let i = 0; (virtualNode = childNodes[i]); i++) {\n            if (virtualNode.end < start) continue;\n\n            if (virtualNode.childNodes.length) {\n                childNodes = virtualNode.childNodes;\n\n                i = -1;\n\n                continue;\n            }\n\n            offset = start - virtualNode.start;\n\n            break;\n        }\n\n        node = this.getNodeByPath(virtualNode.path, this.dom.root);\n\n        range.setStart(node, offset);\n        range.collapse(true);\n\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    static buildModelFromState(state) {\n        const root = new Node();\n\n        root.start = 0;\n        root.end = state.text.length - 1;\n\n        TreeBuilder.buildTree(state.text, state.markups, root);\n\n        return root;\n    }\n}\n\nexport default RichTextEditor;\n\n\n// WEBPACK FOOTER //\n// ./src/RichTextEditor.js","class Dom {\n    constructor() {\n        this.root = null;\n\n        Object.seal(this);\n    }\n}\n\nexport default Dom;\n\n\n// WEBPACK FOOTER //\n// ./src/Dom.js","class Util {\n\n    /**\n     * @param   {object} target\n     * @param   {object} source\n     * @param   {boolean} deep\n     * @return  {object}\n     */\n\n    static extend(target, source, deep) {\n        let sourceKeys = [];\n\n        if (!target || typeof target !== 'object') {\n            throw new TypeError('[Util#extend] Target must be a valid object');\n        }\n\n        deep = deep || false;\n\n        if (Array.isArray(source)) {\n            for (let i = 0; i < source.length; i++) {\n                sourceKeys.push(i);\n            }\n        } else if (source) {\n            sourceKeys = Object.keys(source);\n        }\n\n        for (let i = 0; i < sourceKeys.length; i++) {\n            let key = sourceKeys[i];\n            let descriptor = Object.getOwnPropertyDescriptor(source, key);\n\n            // Skip computed properties\n\n            if (typeof descriptor.get === 'function') continue;\n\n            if (!deep || typeof source[key] !== 'object') {\n                // All non-object primitives, or all properties if\n                // shallow extend\n\n                target[key] = source[key];\n            } else if (Array.isArray(source[key])) {\n                // Arrays\n\n                if (!target[key]) {\n                    target[key] = [];\n                }\n\n                this.extend(target[key], source[key], deep);\n            } else {\n                // Objects\n\n                if (!target[key]) {\n                    target[key] = {};\n                }\n\n                this.extend(target[key], source[key], deep);\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * Flattens an array.\n     *\n     * @param {Array} arr\n     * @return {Array}\n     */\n\n    static flattenArray(arr) {\n        return arr.reduce((prev, curr) => {\n            if (Array.isArray(curr)) {\n                return prev.concat(curr);\n            }\n\n            prev.push(curr);\n\n            return prev;\n        }, []);\n    }\n\n    /**\n     * Returns a function which calls the provided function\n     * only after the specified interval has elapsed between\n     * function calls. An optional `immediate` boolean will\n     * cause the provided function to be called once immediately\n     * before waiting.\n     *\n     * @param   {function}  fn\n     * @param   {number}    interval\n     * @param   {boolean}   [immediate=false]\n     * @return  {function}\n     */\n\n    static debounce(fn, interval, immediate) {\n        let timeoutId = -1;\n\n        return function() {\n            const args = arguments;\n\n            const later = () => {\n                timeoutId = -1;\n\n                fn.apply(this, args); // eslint-disable-line no-invalid-this\n            };\n\n            if (timeoutId < 0 && immediate) {\n                later();\n            } else {\n                clearTimeout(timeoutId);\n\n                timeoutId = setTimeout(later, interval);\n            }\n        };\n    }\n\n    /**\n     * Returns a function which calls the provided function once per maximum\n     * specified interval.\n     *\n     * @param   {function}  fn\n     * @param   {number}    interval\n     * @return  {function}\n     */\n\n    static throttle(fn, interval) {\n        let timeoutId = -1;\n        let last = -1;\n\n        return function() {\n            const args = arguments;\n            const now = Date.now();\n            const difference = last ? now - last : Infinity;\n\n            const later = () => {\n                last = now;\n\n                fn.apply(this, args); // eslint-disable-line no-invalid-this\n            };\n\n            if (!last || difference >= interval) {\n                later();\n            } else {\n                clearTimeout(timeoutId);\n\n                timeoutId = setTimeout(later, interval - difference);\n            }\n        };\n    }\n\n    /**\n     * @param   {HTMLElement}       el\n     * @param   {string}            selector\n     * @param   {boolean}           [includeSelf]\n     * @return  {HTMLElement|null}\n     */\n\n    static closestParent(el, selector, includeSelf) {\n        let parent = el.parentNode;\n\n        if (includeSelf && el.matches(selector)) {\n            return el;\n        }\n\n        while (parent && parent !== document.body) {\n            if (parent.matches && parent.matches(selector)) {\n                return parent;\n            } else if (parent.parentNode) {\n                parent = parent.parentNode;\n            } else {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * @param   {Element}     el\n     * @param   {string}      selector\n     * @return  {Element[]}\n     */\n\n    static children(el, selector) {\n        const selectors = selector.split(',');\n        const childSelectors = [];\n\n        let children = null;\n        let tempId   = '';\n\n        if (!el.id) {\n            tempId = '_temp_';\n\n            el.id = tempId;\n        }\n\n        while (selectors.length) {\n            childSelectors.push('#' + el.id + '>' + selectors.pop());\n        }\n\n        children = document.querySelectorAll(childSelectors.join(', '));\n\n        if (tempId) {\n            el.removeAttribute('id');\n        }\n\n        return children;\n    }\n\n    /**\n     * @param   {Node}        node\n     * @param   {boolean}     [includeNonElements=false]\n     * @return  {Element[]}\n     */\n\n    static index(node, includeNonElements=false) {\n        let index = 0;\n\n        while ((node = includeNonElements ? node.previousSibling : node.previousElementSibling) !== null) {\n            index++;\n        }\n\n        return index;\n    }\n}\n\nexport default Util;\n\n\n// WEBPACK FOOTER //\n// ./src/Util.js","class Markup extends Array {\n    constructor([tag, start, end]) {\n        super();\n\n        this[0] = tag;\n        this[1] = start;\n        this[2] = end;\n\n        Object.defineProperties(this, {\n            type: {\n                get() {\n                    return ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p'].indexOf(this[0]) > -1 ? 'block' : 'inline';\n                }\n            },\n            isBlock: {\n                get() {\n                    return this.type === 'block';\n                }\n            },\n            isInline: {\n                get() {\n                    return this.type === 'inline';\n                }\n            }\n        });\n\n        Object.seal(this);\n    }\n}\n\nexport default Markup;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Markup.js","class Node {\n    constructor() {\n        this.childNodes = [];\n        this.start      = -1;\n        this.end        = -1;\n        this.tag        = '';\n        this.text       = '';\n        this.path       = [];\n\n        Object.seal(this);\n    }\n}\n\nexport default Node;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Node.js","class Caret {\n    constructor() {\n        this.path = null;\n        this.node = null;\n        this.offset = null;\n\n        Object.seal(this);\n    }\n}\n\nexport default Caret;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Caret.js","class Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n\n        Object.seal(this);\n    }\n}\n\nexport default Range;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Range.js","import Node from './models/Node';\n\nclass TreeBuilder {\n    static buildTree(text, markups, parent, startIndex=0) {\n        let lastSibling = null;\n\n        let path = null;\n        let index = 0;\n\n        for (let i = startIndex; i < markups.length; i++) {\n            const markup = markups[i];\n\n            if (lastSibling && markup[2] <= lastSibling.end) {\n                // Recurse down\n\n                lastSibling.childNodes.length = 0;\n\n                i = TreeBuilder.buildTree(text, markups, lastSibling, i);\n            } else if (markup[1] > parent.end) {\n                // Return up\n\n                if (lastSibling.end < parent.end) {\n                    // Preceeded by text node\n\n                    path = parent.path.slice().concat([index++]);\n\n                    parent.childNodes.push(TreeBuilder.getNode('', lastSibling.end + 1, parent.end, text, path));\n                }\n\n                return i - 1;\n            } else {\n                const lastIndex = lastSibling ? lastSibling.end + 1 : parent.start;\n\n                // First child or sibling\n\n                if (markup[1] > lastIndex) {\n                    // Preceeded by text node\n\n                    path = parent.path.slice().concat([index++]);\n\n                    parent.childNodes.push(TreeBuilder.getNode('', lastIndex, markup[1] - 1, text, path));\n                }\n\n                path = parent.path.slice().concat([index++]);\n\n                lastSibling = TreeBuilder.getNode(markup[0], markup[1], markup[2], text, path);\n\n                // Create internal text node\n\n                path = path.slice().concat(0);\n\n                lastSibling.childNodes.push(TreeBuilder.getNode('', markup[1], markup[2], text, path));\n\n                parent.childNodes.push(lastSibling);\n            }\n        }\n    }\n\n    static getNode(tag, start, end, text, path) {\n        const node = new Node();\n\n        node.tag = tag;\n        node.start = start;\n        node.end = end;\n        node.path = path;\n\n        if (!tag) {\n            node.text = text.slice(start, end + 1);\n        }\n\n        return node;\n    }\n\n    static insertCharacters(characters, range) {\n        if (range.from.node === range.to.node) {\n            const node = range.from.node;\n\n\n            // Same node\n\n            node.text = node.text.slice(0, range.from.offset) + characters + node.text.slice(range.to.offset);\n        }\n\n        // TODO: increment all start/end values in subsequent nodes\n\n        // TODO: return closest common ancestor node for re-rendering (not in this class)\n    }\n}\n\nexport default TreeBuilder;\n\n\n// WEBPACK FOOTER //\n// ./src/TreeBuilder.js","class Renderer {\n    static renderNodes(nodes) {\n        return nodes.map(Renderer.renderNode).join('');\n    }\n\n    static renderNode(node) {\n        let html = '';\n\n        if (node.tag) {\n            html += '<' + node.tag + '>';\n        }\n\n        if (node.childNodes.length) {\n            html += Renderer.renderNodes(node.childNodes);\n        } else {\n            html += node.text;\n        }\n\n        if (node.tag) {\n            html += '</' + node.tag + '>';\n        }\n\n        return html;\n    }\n}\n\nexport default Renderer;\n\n\n// WEBPACK FOOTER //\n// ./src/Renderer.js","module.exports = {\n\t\"text\": \"Lorem ipsum dolor sit amet. Consectetur adipiscing\",\n\t\"markups\": [\n\t\t[\n\t\t\t\"p\",\n\t\t\t0,\n\t\t\t26\n\t\t],\n\t\t[\n\t\t\t\"em\",\n\t\t\t6,\n\t\t\t16\n\t\t],\n\t\t[\n\t\t\t\"strong\",\n\t\t\t12,\n\t\t\t16\n\t\t],\n\t\t[\n\t\t\t\"h2\",\n\t\t\t28,\n\t\t\t50\n\t\t]\n\t]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data.json\n// module id = 11\n// module chunks = 0","class State {\n    constructor() {\n        this.text = '';\n        this.markups = [];\n        this.selection = [];\n\n        Object.seal(this);\n    }\n}\n\nexport default State;\n\n\n// WEBPACK FOOTER //\n// ./src/models/State.js","import State    from './models/State';\nimport Markup   from './models/Markup';\n\nclass Editor {\n    static insertCharacters(state, characters, fromIndex, toIndex) {\n        const newState = new State();\n        const totalDeleted = toIndex - fromIndex;\n        const totalAdded = characters.length;\n        const adjustment = totalAdded - totalDeleted;\n\n        newState.text = state.text.slice(0, fromIndex) + characters + state.text.slice(toIndex);\n\n        newState.markups = Editor.adjustMarkups(state.markups, fromIndex, toIndex, totalAdded, adjustment);\n\n        newState.selection = [fromIndex + totalAdded, fromIndex + totalAdded];\n\n        return newState;\n    }\n\n    static adjustMarkups(markups, fromIndex, toIndex, totalAdded, adjustment) {\n        const newMarkups = [];\n\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [tag, start, end] = markup;\n            const newMarkup = new Markup(markup);\n\n            if (!(markup instanceof Markup)) {\n                markup = new Markup(markup);\n            }\n\n            // Selection completely envelopes markup\n\n            if (start > fromIndex && end < toIndex) continue;\n\n            if (start <= fromIndex && end >= toIndex) {\n                // Selection within markup or equal to markup\n\n                newMarkup[2] += adjustment;\n\n                if (markup.isInline && (start === fromIndex && fromIndex === toIndex)) {\n                    // Collapsed caret at start of inline markup\n\n                    newMarkup[1] += adjustment;\n                }\n            } else if (start > toIndex) {\n                // Markup after Selection\n\n                newMarkup[1] += adjustment;\n                newMarkup[2] += adjustment;\n            } else if (fromIndex < start && toIndex > start && toIndex < end) {\n                // Selection partially envelopes markup from start\n\n                newMarkup[1] += (adjustment + (toIndex - start));\n                newMarkup[2] += adjustment;\n            } else if (fromIndex > start && fromIndex < end && toIndex > end) {\n                // Selection partially envelopes markup from end\n\n                newMarkup[2] = fromIndex + totalAdded;\n            }\n\n            newMarkups.push(newMarkup);\n        }\n\n        return newMarkups;\n    }\n}\n\nexport default Editor;\n\n\n// WEBPACK FOOTER //\n// ./src/Editor.js"],"sourceRoot":""}