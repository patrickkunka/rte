{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 1db4f19d31918fa7ee48","webpack:///./src/factory.js","webpack:///./src/RichTextEditor.js","webpack:///./src/Dom.js","webpack:///./src/Util.js","webpack:///./src/models/Markup.js","webpack:///./src/constants/Markups.js","webpack:///./src/models/Node.js","webpack:///./src/models/Caret.js","webpack:///./src/models/Range.js","webpack:///./src/constants/Common.js","webpack:///./src/models/State.js","webpack:///./src/models/Action.js","webpack:///./src/EventHandler.js","webpack:///./src/constants/Actions.js","webpack:///./src/constants/Keys.js","webpack:///./src/TreeBuilder.js","webpack:///./src/Renderer.js","webpack:///./src/actions/reducer.js","webpack:///./src/Editor.js","webpack:///./tests/data.json"],"names":["factory","el","richTextEditor","attach","module","exports","RichTextEditor","dom","eventHandler","root","history","historyIndex","Object","defineProperties","state","get","initialState","push","buildInitialState","render","bindEvents","extend","markups","length","map","markup","buildModelFromState","innerHTML","renderNodes","childNodes","console","log","positionCaret","selection","actionRaw","action","assign","type","window","getSelection","range","getRangeFromSelection","nextState","reduce","TypeError","toString","node","path","unshift","index","parentElement","i","anchorPath","getPathFromNode","anchorNode","virtualAnchorNode","getNodeByPath","from","to","extentPath","virtualExtentNode","isRtl","rangeFrom","rangeTo","isCollapsed","extentNode","isGreaterPath","anchorOffset","extentOffset","offset","Math","min","start","end","document","createRange","virtualNode","nodeLeft","nodeRight","offsetStart","offsetEnd","setStart","collapse","removeAllRanges","addRange","setEnd","setBaseAndExtent","buildTreeFromRoot","text","Dom","seal","Util","target","source","deep","sourceKeys","Array","isArray","keys","key","descriptor","getOwnPropertyDescriptor","arr","prev","curr","concat","fn","interval","immediate","timeoutId","args","arguments","later","apply","clearTimeout","setTimeout","last","now","Date","difference","Infinity","selector","includeSelf","parent","parentNode","matches","body","selectors","split","childSelectors","children","tempId","id","pop","querySelectorAll","join","removeAttribute","includeNonElements","previousSibling","previousElementSibling","str","toLowerCase","replace","$1","toUpperCase","camelCase","charAt","slice","pathOne","pathTwo","valueOne","valueTwo","Markups","Markup","tag","H1","H2","H3","H4","H5","H6","P","indexOf","MARKUP_TYPE_BLOCK","MARKUP_TYPE_INLINE","isBlock","isInline","TEXT","BLOCK_BREAK","LINE_BREAK","STRONG","EM","BR","Symbol","Node","isText","Caret","Range","direction","isLtr","DIRECTION_LTR","DIRECTION_RTL","State","activeBlockMarkup","activeInlineMarkups","envelopedBlockMarkups","Action","content","Actions","Keys","EventHandler","delegator","bind","addEventListener","removeEventListener","e","eventType","pascalCase","Error","preventDefault","applyAction","INSERT","activeElement","SET_SELECTION","metaKey","A","B","TOGGLE_INLINE","I","Z","shiftKey","redo","undo","ENTER","SHIFT_RETURN","RETURN","BACKSPACE","DELETE","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","NONE","SELECTION_DELAY","C","V","S","TreeBuilder","openNodes","isAtLeaf","requiresNewLeaf","j","closedNode","textNode","closeNode","newNode","getOpenNode","leaf","Renderer","nodes","renderNode","html","match","prevState","setActiveMarkups","insert","fromIndex","toIndex","isTagActive","removeInlineMarkup","addInlineMarkup","Editor","totalDeleted","before","after","totalAdded","adjustment","totalTrimmed","adjustMarkups","splitMarkups","trimWhitespace","joinMarkups","enveloped","insertIndex","formattedState","forEach","formatFrom","formatTo","ingestMarkups","len","splice","newMarkups","markupStart","markupEnd","newMarkup","removeMarkup","closingBlockMarkup","getClosingBlockMarkup","markupIndex","splitIndex","totalAllTrimmed","caretAdjustment","markupRaw","trimmed","trim","markupTag","newTag","closingInlines","closingBlock","adjacentInlineMarkups","parentBlock","lastAdjacent"],"mappings":"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","file":"rte.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rte\"] = factory();\n\telse\n\t\troot[\"rte\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1db4f19d31918fa7ee48","import RichTextEditor from './RichTextEditor';\nimport data           from '../tests/data.json';\n\nfunction factory(el) {\n    const richTextEditor = new RichTextEditor();\n\n    richTextEditor.attach(el, data);\n\n    return richTextEditor;\n}\n\nmodule.exports = factory;\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","import Dom          from './Dom';\nimport Util         from './Util';\nimport Markup       from './models/Markup';\nimport Node         from './models/Node';\nimport Caret        from './models/Caret';\nimport Range        from './models/Range';\nimport State        from './models/State';\nimport Action       from './models/Action';\nimport EventHandler from './EventHandler';\nimport TreeBuilder  from './TreeBuilder';\nimport Renderer     from './Renderer';\nimport reducer      from './actions/reducer';\n\nimport {\n    SET_SELECTION\n} from './constants/Actions';\n\nimport {\n    DIRECTION_LTR,\n    DIRECTION_RTL\n} from './constants/Common';\n\nclass RichTextEditor {\n    constructor() {\n        this.dom            = new Dom();\n        this.eventHandler   = new EventHandler();\n        this.root           = null;\n        this.history        = [];\n        this.historyIndex   = -1;\n\n        Object.defineProperties(this, {\n            state: {\n                get() {\n                    return this.history[this.historyIndex];\n                }\n            }\n        });\n    }\n\n    attach(el, initialState=new State()) {\n        this.dom.root = el;\n\n        this.history.push(this.buildInitialState(initialState));\n\n        this.historyIndex++;\n\n        this.render();\n\n        this.eventHandler.bindEvents(this.dom.root, this);\n    }\n\n    /**\n     * @param   {object} initialState\n     * @return  {State}\n     */\n\n    buildInitialState(initialState) {\n        const state = Util.extend(new State(), initialState);\n\n        if (state.markups.length < 1) {\n            state.markups.push(['p', 0, 0]);\n        }\n\n        // TODO: if text but no markups, wrap entire in <p>\n\n        state.markups = state.markups.map(markup => new Markup(markup));\n\n        return state;\n    }\n\n    render() {\n        this.root = RichTextEditor.buildModelFromState(this.state);\n\n        this.dom.root.innerHTML = Renderer.renderNodes(this.root.childNodes);\n    }\n\n    undo() {\n        if (this.historyIndex === 1) return;\n\n        console.log('UNDO');\n\n        this.historyIndex--;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n    }\n\n    redo() {\n        if (this.history.length - 1 === this.historyIndex) return;\n\n        console.log('REDO');\n\n        this.historyIndex++;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n    }\n\n    /**\n     * @param {object} actionRaw\n     * @param {string} content\n     * @return {void}\n     */\n\n    applyAction(actionRaw) {\n        const action = Object.assign(new Action(), actionRaw);\n\n        if (action.type === SET_SELECTION) {\n            // Detect new selection from browser API\n\n            const selection = window.getSelection();\n\n            action.range = this.getRangeFromSelection(selection);\n        } else {\n            // Use previous range\n\n            action.range = this.state.selection;\n        }\n\n        const nextState = [action].reduce(reducer, this.state);\n\n        if (!(nextState instanceof State)) {\n            throw new TypeError(`[RichTextEditor] Action type \"${action.type.toString()}\" did not return a valid state object`);\n        }\n\n        if (nextState === this.state) return;\n\n        // TODO: discern between 'push' vs 'replace' commands i.e. inserting a\n        // char vs moving a cursor\n\n        console.log(action.type);\n\n        // Chop off any divergent future state\n\n        this.history.length = this.historyIndex + 1;\n\n        // Push in new state\n\n        this.history.push(nextState);\n\n        this.historyIndex++;\n\n        if (action.type === SET_SELECTION) return;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n\n        // console.log(JSON.stringify(this.state.markups));\n    }\n\n    getPathFromNode(node) {\n        const path = [];\n\n        while (node && node !== this.dom.root) {\n            path.unshift(Util.index(node, true));\n\n            node = node.parentElement;\n        }\n\n        return path;\n    }\n\n    getNodeByPath(path, root) {\n        let node = root;\n        let index = -1;\n        let i = 0;\n\n        while (typeof (index = path[i]) === 'number') {\n            node = node.childNodes[index];\n\n            i++;\n        }\n\n        return node || null;\n    }\n\n    /**\n     * @param   {Selection} selection\n     * @return  {Range}\n     */\n\n    // TODO: consolodate range/selection models, no need for both\n\n    getRangeFromSelection(selection) {\n        const anchorPath = this.getPathFromNode(selection.anchorNode);\n        const virtualAnchorNode = this.getNodeByPath(anchorPath, this.root);\n        const from = new Caret();\n        const to = new Caret();\n\n        let extentPath = anchorPath;\n        let virtualExtentNode = virtualAnchorNode;\n        let isRtl = false;\n        let rangeFrom = -1;\n        let rangeTo = -1;\n\n        if (!selection.isCollapsed) {\n            extentPath = this.getPathFromNode(selection.extentNode);\n            virtualExtentNode = this.getNodeByPath(extentPath, this.root);\n        }\n\n        // If the anchor is greater than the extent, or both paths are equal\n        // but the anchor offset is greater than the extent offset, the range\n        // should be considered \"RTL\"\n\n        isRtl =\n            Util.isGreaterPath(anchorPath, extentPath) ||\n            (!Util.isGreaterPath(extentPath, anchorPath) && selection.anchorOffset > selection.extentOffset);\n\n        from.node   = to.node = isRtl ? virtualExtentNode : virtualAnchorNode;\n        from.offset = to.offset = isRtl ? selection.extentOffset : selection.anchorOffset;\n        from.path   = to.path = isRtl ? extentPath : anchorPath;\n\n        if (!selection.isCollapsed) {\n            to.node     = isRtl ? virtualAnchorNode : virtualExtentNode;\n            to.offset   = isRtl ? selection.anchorOffset : selection.extentOffset;\n            to.path     = isRtl ? anchorPath : extentPath;\n        }\n\n        rangeFrom = Math.min(from.node.start + from.offset, from.node.end);\n        rangeTo = Math.min(to.node.start + to.offset, to.node.end);\n\n        return new Range(rangeFrom, rangeTo, isRtl ? DIRECTION_RTL : DIRECTION_LTR);\n    }\n\n    positionCaret({from, to, isRtl}) {\n        const range = document.createRange();\n        const selection = window.getSelection();\n\n        let childNodes  = this.root.childNodes;\n        let virtualNode = null;\n        let nodeLeft    = null;\n        let nodeRight   = null;\n        let offsetStart = -1;\n        let offsetEnd   = -1;\n\n        for (let i = 0; (virtualNode = childNodes[i]); i++) {\n            // Node ends before caret\n\n            if (virtualNode.end < from) continue;\n\n            // The desired node is this node, or within this node\n\n            if (virtualNode.childNodes.length) {\n                // Node has children, drop down until at leaf\n\n                childNodes = virtualNode.childNodes;\n\n                i = -1;\n\n                continue;\n            }\n\n            // At leaf\n\n            offsetStart = from - virtualNode.start;\n\n            break;\n        }\n\n        nodeLeft = this.getNodeByPath(virtualNode.path, this.dom.root);\n\n        range.setStart(nodeLeft, offsetStart);\n\n        if (from === to) {\n            // Single caret\n\n            range.collapse(true);\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            return;\n        }\n\n        // Multi-character selection, reset child nodes\n\n        childNodes = this.root.childNodes;\n\n        for (let i = 0; (virtualNode = childNodes[i]); i++) {\n            if (virtualNode.end < to) continue;\n\n            if (virtualNode.childNodes.length) {\n                childNodes = virtualNode.childNodes;\n\n                i = -1;\n\n                continue;\n            }\n\n            offsetEnd = to - virtualNode.start;\n\n            break;\n        }\n\n        nodeRight = this.getNodeByPath(virtualNode.path, this.dom.root);\n\n        range.setEnd(nodeRight, offsetEnd);\n\n        selection.removeAllRanges();\n\n        if (isRtl) {\n            selection.setBaseAndExtent(nodeRight, offsetEnd, nodeLeft, offsetStart);\n        } else {\n            selection.setBaseAndExtent(nodeLeft, offsetStart, nodeRight, offsetEnd);\n        }\n    }\n\n    static buildModelFromState(state) {\n        const root = new Node();\n\n        TreeBuilder.buildTreeFromRoot(root, state.text, state.markups);\n\n        return root;\n    }\n}\n\nexport default RichTextEditor;\n\n\n// WEBPACK FOOTER //\n// ./src/RichTextEditor.js","class Dom {\n    constructor() {\n        this.root = null;\n\n        Object.seal(this);\n    }\n}\n\nexport default Dom;\n\n\n// WEBPACK FOOTER //\n// ./src/Dom.js","class Util {\n\n    /**\n     * @param   {object} target\n     * @param   {object} source\n     * @param   {boolean} deep\n     * @return  {object}\n     */\n\n    static extend(target, source, deep) {\n        let sourceKeys = [];\n\n        if (!target || typeof target !== 'object') {\n            throw new TypeError('[Util#extend] Target must be a valid object');\n        }\n\n        deep = deep || false;\n\n        if (Array.isArray(source)) {\n            for (let i = 0; i < source.length; i++) {\n                sourceKeys.push(i);\n            }\n        } else if (source) {\n            sourceKeys = Object.keys(source);\n        }\n\n        for (let i = 0; i < sourceKeys.length; i++) {\n            let key = sourceKeys[i];\n            let descriptor = Object.getOwnPropertyDescriptor(source, key);\n\n            // Skip computed properties\n\n            if (typeof descriptor.get === 'function') continue;\n\n            if (!deep || typeof source[key] !== 'object') {\n                // All non-object primitives, or all properties if\n                // shallow extend\n\n                target[key] = source[key];\n            } else if (Array.isArray(source[key])) {\n                // Arrays\n\n                if (!target[key]) {\n                    target[key] = [];\n                }\n\n                this.extend(target[key], source[key], deep);\n            } else {\n                // Objects\n\n                if (!target[key]) {\n                    target[key] = {};\n                }\n\n                this.extend(target[key], source[key], deep);\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * Flattens an array.\n     *\n     * @param {Array} arr\n     * @return {Array}\n     */\n\n    static flattenArray(arr) {\n        return arr.reduce((prev, curr) => {\n            if (Array.isArray(curr)) {\n                return prev.concat(curr);\n            }\n\n            prev.push(curr);\n\n            return prev;\n        }, []);\n    }\n\n    /**\n     * Returns a function which calls the provided function\n     * only after the specified interval has elapsed between\n     * function calls. An optional `immediate` boolean will\n     * cause the provided function to be called once immediately\n     * before waiting.\n     *\n     * @param   {function}  fn\n     * @param   {number}    interval\n     * @param   {boolean}   [immediate=false]\n     * @return  {function}\n     */\n\n    static debounce(fn, interval, immediate) {\n        let timeoutId = -1;\n\n        return function() {\n            const args = arguments;\n\n            const later = () => {\n                timeoutId = -1;\n\n                fn.apply(this, args); // eslint-disable-line no-invalid-this\n            };\n\n            if (timeoutId < 0 && immediate) {\n                later();\n            } else {\n                clearTimeout(timeoutId);\n\n                timeoutId = setTimeout(later, interval);\n            }\n        };\n    }\n\n    /**\n     * Returns a function which calls the provided function once per maximum\n     * specified interval.\n     *\n     * @param   {function}  fn\n     * @param   {number}    interval\n     * @return  {function}\n     */\n\n    static throttle(fn, interval) {\n        let timeoutId = -1;\n        let last = -1;\n\n        return function() {\n            const args = arguments;\n            const now = Date.now();\n            const difference = last ? now - last : Infinity;\n\n            const later = () => {\n                last = now;\n\n                fn.apply(this, args); // eslint-disable-line no-invalid-this\n            };\n\n            if (!last || difference >= interval) {\n                later();\n            } else {\n                clearTimeout(timeoutId);\n\n                timeoutId = setTimeout(later, interval - difference);\n            }\n        };\n    }\n\n    /**\n     * @param   {HTMLElement}       el\n     * @param   {string}            selector\n     * @param   {boolean}           [includeSelf]\n     * @return  {HTMLElement|null}\n     */\n\n    static closestParent(el, selector, includeSelf) {\n        let parent = el.parentNode;\n\n        if (includeSelf && el.matches(selector)) {\n            return el;\n        }\n\n        while (parent && parent !== document.body) {\n            if (parent.matches && parent.matches(selector)) {\n                return parent;\n            } else if (parent.parentNode) {\n                parent = parent.parentNode;\n            } else {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * @param   {Element}     el\n     * @param   {string}      selector\n     * @return  {Element[]}\n     */\n\n    static children(el, selector) {\n        const selectors = selector.split(',');\n        const childSelectors = [];\n\n        let children = null;\n        let tempId   = '';\n\n        if (!el.id) {\n            tempId = '_temp_';\n\n            el.id = tempId;\n        }\n\n        while (selectors.length) {\n            childSelectors.push('#' + el.id + '>' + selectors.pop());\n        }\n\n        children = document.querySelectorAll(childSelectors.join(', '));\n\n        if (tempId) {\n            el.removeAttribute('id');\n        }\n\n        return children;\n    }\n\n    /**\n     * @param   {Node}        node\n     * @param   {boolean}     [includeNonElements=false]\n     * @return  {Element[]}\n     */\n\n    static index(node, includeNonElements=false) {\n        let index = 0;\n\n        while ((node = includeNonElements ? node.previousSibling : node.previousElementSibling) !== null) {\n            index++;\n        }\n\n        return index;\n    }\n\n    /**\n     * Converts a dash or snake-case string to camel case.\n     *\n     * @param   {string}    str\n     * @return  {string}\n     */\n\n    static camelCase(str) {\n        return str.toLowerCase()\n            .replace(/([_-][a-z0-9])/g, $1 => $1.toUpperCase().replace(/[_-]/, ''));\n    }\n\n    /**\n     * Converts a dash or snake-case string to pascal case.\n     *\n     * @param   {string}    str\n     * @return  {string}\n     */\n\n    static pascalCase(str) {\n        return (str = Util.camelCase(str))\n            .charAt(0)\n            .toUpperCase() + str.slice(1);\n    }\n\n    /**\n     * Converts a camel or pascal-case string to dash case.\n     *\n     * @param   {string}    str\n     * @return  {string}\n     */\n\n    static dashCase(str) {\n        return str.replace(/([A-Z])/g, '-$1')\n            .replace(/^-/, '')\n            .toLowerCase();\n    }\n\n    /**\n     * Compares two arrays of indices, returning `true` if `pathOne` points\n     * to a node at a greater position in the tree.\n     *\n     * @param  {Array.<number>} pathOne\n     * @param  {Array.<number>} pathTwo\n     * @return {boolean}\n     */\n\n    static isGreaterPath(pathOne, pathTwo) {\n        let index    = 0;\n        let valueOne = pathOne[index];\n        let valueTwo = pathTwo[index];\n\n        while (typeof valueOne === 'number' && typeof valueTwo === 'number') {\n            if (valueOne > valueTwo) {\n                return true;\n            }\n\n            index++;\n\n            valueOne = pathOne[index];\n            valueTwo = pathTwo[index];\n        }\n\n        return false;\n    }\n}\n\nexport default Util;\n\n\n// WEBPACK FOOTER //\n// ./src/Util.js","import * as Markups from '../constants/Markups';\n\nclass Markup extends Array {\n    constructor([tag, start, end]) {\n        super();\n\n        this[0] = tag;\n        this[1] = start;\n        this[2] = end;\n\n        Object.defineProperties(this, {\n            tag: {\n                get: () => this[0]\n            },\n            start: {\n                get: () => this[1]\n            },\n            end: {\n                get: () => this[2]\n            },\n            type: {\n                get() {\n                    return [\n                        Markups.H1,\n                        Markups.H2,\n                        Markups.H3,\n                        Markups.H4,\n                        Markups.H5,\n                        Markups.H6,\n                        Markups.P\n                    ].indexOf(this[0]) > -1 ? Markups.MARKUP_TYPE_BLOCK : Markups.MARKUP_TYPE_INLINE;\n                }\n            },\n            isBlock: {\n                get() {\n                    return this.type === Markups.MARKUP_TYPE_BLOCK;\n                }\n            },\n            isInline: {\n                get() {\n                    return this.type === Markups.MARKUP_TYPE_INLINE;\n                }\n            }\n        });\n\n        Object.seal(this);\n    }\n}\n\nexport default Markup;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Markup.js","export const H1     = 'h1';\nexport const H2     = 'h2';\nexport const H3     = 'h3';\nexport const H4     = 'h4';\nexport const H5     = 'h5';\nexport const H6     = 'h6';\nexport const P      = 'p';\nexport const TEXT   = '#text';\n\nexport const BLOCK_BREAK = '\\n\\n';\nexport const LINE_BREAK  = '\\n';\n\nexport const STRONG = 'strong';\nexport const EM     = 'em';\nexport const BR     = 'br';\n\nexport const MARKUP_TYPE_INLINE = Symbol('MARKUP_TYPE_INLINE');\nexport const MARKUP_TYPE_BLOCK  = Symbol('MARKUP_TYPE_BLOCK');\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Markups.js","import {TEXT, H1, H2, H3, H4, H5, H6, P} from '../constants/Markups';\n\nclass Node {\n    constructor() {\n        this.childNodes = [];\n        this.parent     = null;\n        this.start      = -1;\n        this.end        = -1;\n        this.tag        = '';\n        this.text       = '';\n        this.path       = [];\n\n        Object.seal(this);\n    }\n\n    get isText() {\n        return this.tag === TEXT;\n    }\n\n    get isBlock() {\n        return [H1, H2, H3, H4, H5, H6, P].indexOf(this.tag);\n    }\n\n    get isInline() {\n        return !this.isText && !this.isBlock;\n    }\n}\n\nexport default Node;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Node.js","class Caret {\n    constructor() {\n        this.path = null;\n        this.node = null;\n        this.offset = null;\n\n        Object.seal(this);\n    }\n}\n\nexport default Caret;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Caret.js","import {\n    DIRECTION_LTR,\n    DIRECTION_RTL\n} from '../constants/Common';\n\nclass Range {\n    constructor(from=-1, to=-1, direction=DIRECTION_LTR) {\n        this.from       = from;\n        this.to         = to;\n        this.direction  = direction;\n\n        Object.seal(this);\n    }\n\n    get isCollapsed() {\n        return this.from === this.to;\n    }\n\n    get isLtr() {\n        return this.direction === DIRECTION_LTR;\n    }\n\n    get isRtl() {\n        return this.direction === DIRECTION_RTL;\n    }\n\n    get anchor() {\n        if (this.isLtr) {\n            return this.from;\n        }\n\n        return this.to;\n    }\n\n    get extent() {\n        if (this.isLtr) {\n            return this.to;\n        }\n\n        return this.from;\n    }\n}\n\nexport default Range;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Range.js","export const DIRECTION_LTR = Symbol('DIRECTION_LTR');\nexport const DIRECTION_RTL = Symbol('DIRECTION_RTL');\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Common.js","import Range from './Range';\n\nclass State {\n    constructor() {\n        this.text                   = '';\n        this.markups                = [];\n        this.selection              = new Range();\n        this.activeBlockMarkup      = null;\n        this.activeInlineMarkups    = [];\n        this.envelopedBlockMarkups  = [];\n\n        Object.seal(this);\n    }\n\n    get length() {\n        return this.text.length;\n    }\n\n    isTagActive(tag) {\n        for (let i = 0, markup; (markup = this.activeInlineMarkups[i]); i++) {\n            if (markup[0] === tag) return true;\n        }\n\n        return false;\n    }\n}\n\nexport default State;\n\n\n// WEBPACK FOOTER //\n// ./src/models/State.js","class Action {\n    constructor() {\n        this.type    = null;\n        this.range   = null;\n        this.content = '';\n        this.tag     = '';\n\n        Object.seal(this);\n    }\n}\n\nexport default Action;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Action.js","import Util         from './Util';\nimport * as Actions from './constants/Actions';\nimport * as Keys    from './constants/Keys';\n\nimport {STRONG, EM} from './constants/Markups';\n\nclass EventHandler {\n    bindEvents(root, richTextEditor) {\n        this.delegator = this.delegator.bind(this, richTextEditor);\n\n        root.addEventListener('keypress', this.delegator);\n        root.addEventListener('keydown', this.delegator);\n        root.addEventListener('mousedown', this.delegator);\n        window.addEventListener('mouseup', this.delegator);\n    }\n\n    unbindEvents(root) {\n        root.removeEventListener('keypress', this.delegator);\n        root.removeEventListener('keydown', this.delegator);\n        root.removeEventListener('click', this.delegator);\n        root.addEventListener('mousedown', this.delegator);\n        window.addEventListener('mouseup', this.delegator);\n    }\n\n    delegator(richTextEditor, e) {\n        const eventType = e.type;\n        const fn = this['handle' + Util.pascalCase(eventType)];\n\n        if (typeof fn !== 'function') {\n            throw new Error(`[EventHandler] No handler found for event \"${eventType}\"`);\n        }\n\n        fn(e, richTextEditor);\n    }\n\n    handleKeypress(e, richTextEditor) {\n        e.preventDefault();\n\n        richTextEditor.applyAction({type: Actions.INSERT, content: e.key});\n    }\n\n    handleMouseup(e, richTextEditor) {\n        if (richTextEditor.dom.root !== document.activeElement) return;\n\n        richTextEditor.applyAction({type: Actions.SET_SELECTION});\n    }\n\n    handleMousedown(e, richTextEditor) {\n        richTextEditor.applyAction({type: Actions.SET_SELECTION});\n    }\n\n    handleKeydown(e, richTextEditor) {\n        const key = e.key.toLowerCase();\n\n        let action = {};\n\n        if (e.metaKey) {\n            switch (key) {\n                case Keys.A:\n                    action = {type: Actions.SET_SELECTION};\n\n                    break;\n                case Keys.B:\n                    action = {type: Actions.TOGGLE_INLINE, tag: STRONG};\n\n                    e.preventDefault();\n\n                    break;\n                case Keys.I:\n                    action = {type: Actions.TOGGLE_INLINE, tag: EM};\n\n                    e.preventDefault();\n\n                    break;\n                // case Keys.C:\n                //    command = 'copy';\n\n                //     break;\n                // case Keys.V:\n                //     command = 'paste';\n\n                //     break;\n                // case Keys.S:\n                //     command = 'save';\n\n                //     break;\n                case Keys.Z:\n                    e.preventDefault();\n\n                    return e.shiftKey ? richTextEditor.redo() : richTextEditor.undo();\n            }\n        }\n\n        switch (key) {\n            case Keys.ENTER:\n                action = {type: e.shiftKey ? Actions.SHIFT_RETURN : Actions.RETURN};\n\n                e.preventDefault();\n\n                break;\n            case Keys.BACKSPACE:\n                action = {type: Actions.BACKSPACE};\n\n                e.preventDefault();\n\n                break;\n            case Keys.DELETE:\n                action = {type: Actions.DELETE};\n\n                e.preventDefault();\n\n                break;\n            case Keys.ARROW_LEFT:\n            case Keys.ARROW_RIGHT:\n            case Keys.ARROW_UP:\n            case Keys.ARROW_DOWN:\n                action = {type: Actions.SET_SELECTION};\n\n                break;\n        }\n\n        if (!action || action.type === Actions.NONE) return;\n\n        setTimeout(() => richTextEditor.applyAction(action), EventHandler.SELECTION_DELAY);\n    }\n}\n\nEventHandler.SELECTION_DELAY = 10;\n\nexport default EventHandler;\n\n\n// WEBPACK FOOTER //\n// ./src/EventHandler.js","export const SET_SELECTION      = Symbol('SET_SELECTION');\nexport const INSERT             = Symbol('ACTION_TYPE_INSERT');\nexport const BACKSPACE          = Symbol('ACTION_TYPE_BACKSPACE');\nexport const DELETE             = Symbol('ACTION_TYPE_DELETE');\nexport const RETURN             = Symbol('ACTION_TYPE_RETURN');\nexport const SHIFT_RETURN       = Symbol('ACTION_TYPE_SHIFT_RETURN');\nexport const TOGGLE_INLINE      = Symbol('ACTION_TYPE_TOGGLE_INLINE');\nexport const NONE               = Symbol('ACTION_TYPE_NONE');\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Actions.js","export const ENTER       = 'enter';\nexport const BACKSPACE   = 'backspace';\nexport const DELETE      = 'delete';\nexport const ARROW_UP    = 'arrowup';\nexport const ARROW_DOWN  = 'arrowdown';\nexport const ARROW_LEFT  = 'arrowleft';\nexport const ARROW_RIGHT = 'arrowright';\n\nexport const A = 'a';\nexport const C = 'c';\nexport const V = 'v';\nexport const S = 's';\nexport const Z = 'z';\nexport const B = 'b';\nexport const I = 'i';\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Keys.js","import Node from './models/Node';\n\nclass TreeBuilder {\n    /**\n     * @param   {Node}            root\n     * @param   {string}          text\n     * @param   {Array.<Markup>}  markups\n     * @return  {void}\n     */\n\n    static buildTreeFromRoot(root, text, markups) {\n        const openNodes = [];\n\n        let isAtLeaf = false;\n        let node = root;\n\n        node.start = 0;\n        node.end = text.length;\n\n        // Iterate through characters in text string\n\n        for (let i = 0; i <= text.length; i++) {\n            let requiresNewLeaf = false;\n\n            for (let j = 0, markup; (markup = markups[j]); j++) {\n                let closedNode = null;\n\n                // If markup does not end at index, or collapsed\n                // markup, continue\n\n                if (markup[2] !== i || markup[1] === markup[2]) continue;\n\n                // If is at leaf, and last open node is a text node\n\n                if (isAtLeaf && openNodes[openNodes.length - 1].isText) {\n                    const textNode = openNodes.pop();\n\n                    // Close leaf node\n\n                    TreeBuilder.closeNode(textNode, i, text);\n\n                    isAtLeaf = false;\n                }\n\n                // Close last open node\n\n                requiresNewLeaf = true;\n\n                closedNode = openNodes.pop();\n\n                TreeBuilder.closeNode(closedNode, i);\n\n                // Go up\n\n                node = closedNode.parent;\n            }\n\n            for (let j = 0, markup; (markup = markups[j]); j++) {\n                let newNode = null;\n\n                // If markup does not open at index, continue\n\n                if (markup[1] !== i) continue;\n\n                if (isAtLeaf) {\n                    // If at leaf, close leaf\n\n                    const textNode = openNodes.pop();\n\n                    TreeBuilder.closeNode(textNode, i, text);\n\n                    isAtLeaf = false;\n                }\n\n                // Open node at index\n\n                newNode = TreeBuilder.getOpenNode(markup[0], i, node);\n\n                // Push into open tracking array\n\n                openNodes.push(newNode);\n\n                // Push into parent's children\n\n                node.childNodes.push(newNode);\n\n                // Make new node current node\n\n                node = newNode;\n\n                // Flag leaf required\n\n                requiresNewLeaf = true;\n\n                if (markup[1] === markup[2]) {\n                    // Empty tag, close immediately\n\n                    TreeBuilder.closeNode(node, i);\n                }\n            }\n\n            if (!requiresNewLeaf) continue;\n\n            if (node.start === node.end) {\n                // Empty leaf in empty node, close immediately\n\n                const leaf = TreeBuilder.getOpenNode('#text', i, node);\n\n                node.childNodes.push(leaf);\n\n                TreeBuilder.closeNode(leaf, i);\n\n                while (node.parent && node.start === node.end) {\n                    // While in empty node, go up\n\n                    node = node.parent;\n\n                    openNodes.pop();\n                }\n            }\n\n            if (i < text.length) {\n                // Should open leaf node, but yet not at end of string\n\n                const leaf = TreeBuilder.getOpenNode('#text', i, node);\n\n                node.childNodes.push(leaf);\n\n                openNodes.push(leaf);\n\n                isAtLeaf = true;\n\n                requiresNewLeaf = false;\n            }\n        }\n    }\n\n    /**\n     * @param   {string}    tag\n     * @param   {number}    i\n     * @param   {Node}      parent\n     * @return  {Node}\n     */\n\n    static getOpenNode(tag, start, parent) {\n        const node = new Node();\n\n        node.tag    = tag;\n        node.parent = parent;\n        node.start  = start;\n        node.path   = parent.path.slice();\n\n        node.path.push(parent.childNodes.length);\n\n        return node;\n    }\n\n    /**\n     * @param   {Node}      node\n     * @param   {number}    end\n     * @param   {string}    [text='']\n     * @return  {void}\n     */\n\n    static closeNode(node, end, text='') {\n        node.end = end;\n\n        if (node.isText) {\n            node.text = text.slice(node.start, node.end);\n        }\n    }\n}\n\nexport default TreeBuilder;\n\n\n// WEBPACK FOOTER //\n// ./src/TreeBuilder.js","import {TEXT} from './constants/Markups';\n\nclass Renderer {\n    static renderNodes(nodes, parent=null) {\n        return nodes.map(node => Renderer.renderNode(node, parent)).join('');\n    }\n\n    static renderNode(node, parent) {\n        let html = '';\n\n        if (node.tag !== TEXT) {\n            html += '<' + node.tag + '>';\n        }\n\n        if (node.childNodes.length) {\n            html += Renderer.renderNodes(node.childNodes, node);\n        } else {\n            // Text leaf node\n\n            html += node.text.length ? node.text : '&#8203;';\n        }\n\n        if (parent && parent.childNodes[parent.childNodes.length - 1] === node && html.match(/ $/)) {\n            html += '&#8203;';\n        }\n\n        if (node.tag !== TEXT) {\n            html += '</' + node.tag + '>';\n        }\n\n        return html;\n    }\n}\n\nexport default Renderer;\n\n\n// WEBPACK FOOTER //\n// ./src/Renderer.js","import State        from '../models/State';\nimport Util         from '../Util';\nimport * as Actions from '../constants/Actions';\nimport Editor       from '../Editor';\n\nexport default (prevState, action) => {\n    switch (action.type) {\n        case Actions.SET_SELECTION: {\n            const nextState = Util.extend(new State(), prevState, true);\n\n            Object.assign(nextState.selection, action.range);\n\n            Editor.setActiveMarkups(nextState, action.range);\n\n            return nextState;\n        }\n        case Actions.INSERT: {\n            return Editor.insert(prevState, {from: action.range.from, to: action.range.to}, action.content);\n        }\n        case Actions.BACKSPACE: {\n            const fromIndex = action.range.isCollapsed ? action.range.from - 1 : action.range.from;\n\n            // If at start, ignore\n\n            if (action.range.to === 0) return prevState;\n\n            return Editor.insert(prevState, {from: fromIndex, to: action.range.to}, '');\n        }\n        case Actions.DELETE: {\n            const toIndex = action.range.isCollapsed ? action.range.from + 1 :  action.range.to;\n\n            // If at end, ignore\n\n            if (action.range.from === prevState.text.length) return prevState;\n\n            return Editor.insert(prevState, {from: action.range.from, to: toIndex}, '');\n        }\n        case Actions.RETURN:\n            return Editor.insert(prevState, action.range, '\\n');\n        case Actions.SHIFT_RETURN:\n\n            break;\n        case Actions.TOGGLE_INLINE: {\n            let nextState = null;\n\n            // TODO: if collapsed, simply change state to disable/enable active\n            // markup, any further set selections will reset it as appropriate\n\n            if (prevState.isTagActive(action.tag)) {\n                nextState = Editor.removeInlineMarkup(prevState, action.tag, action.range.from, action.range.to);\n            } else {\n                nextState = Editor.addInlineMarkup(prevState, action.tag, action.range.from, action.range.to);\n            }\n\n            Editor.setActiveMarkups(nextState, action.range);\n\n            return nextState;\n        }\n        default:\n            return prevState;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/actions/reducer.js","import State        from './models/State';\nimport Markup       from './models/Markup';\nimport Util         from './Util';\n\nimport {LINE_BREAK} from './constants/Markups';\n\n/**\n * A static class of utility functions for performing edits to\n * the editor state.\n */\n\nclass Editor {\n    /**\n     * Inserts zero or more characters into a range, deleting\n     * the contents of the range. Adjusts all markups affected by\n     * insertion.\n     *\n     * @static\n     * @param {State}  prevState\n     * @param {Range}  range\n     * @param {string} content\n     */\n\n    static insert(prevState, range, content) {\n        const nextState = new State();\n\n        const totalDeleted = range.to - range.from;\n\n        let before = prevState.text.slice(0, range.from);\n        let after  = prevState.text.slice(range.to);\n        let totalAdded = content.length;\n        let adjustment = totalAdded - totalDeleted;\n        let totalTrimmed = 0;\n\n        nextState.text = before + content + after;\n\n        nextState.markups = Editor.adjustMarkups(\n            prevState.markups,\n            range.from,\n            range.to,\n            totalAdded,\n            adjustment\n        );\n\n        if (content === LINE_BREAK) {\n            nextState.markups = Editor.splitMarkups(nextState.markups, range.from);\n\n            totalTrimmed = Editor.trimWhitespace(nextState, range.from);\n        } else if (content === '') {\n            nextState.markups = Editor.joinMarkups(nextState.markups, range.from);\n            nextState.markups = Editor.joinMarkups(nextState.markups, range.to);\n        }\n\n        nextState.selection.from =\n        nextState.selection.to   = range.from + totalAdded + totalTrimmed;\n\n        Editor.setActiveMarkups(nextState, nextState.selection);\n\n        return nextState;\n    }\n\n    static addInlineMarkup(prevState, tag, from, to) {\n        const nextState = Util.extend(new State(), prevState, true);\n        const enveloped = prevState.envelopedBlockMarkups || [];\n\n        let insertIndex  = -1;\n\n        if (enveloped.length > 1) {\n            let formattedState = nextState;\n\n            // Split and delegate the command\n\n            formattedState.envelopedBlockMarkups.length = 0;\n\n            enveloped.forEach((markup, i) => {\n                const formatFrom = i === 0 ? from : markup[1];\n                const formatTo   = i === enveloped.length - 1 ? to : markup[2];\n\n                formattedState = Editor.addInlineMarkup(formattedState, tag, formatFrom, formatTo);\n            });\n\n            return formattedState;\n        }\n\n        // Single block markup\n\n        const markup = enveloped[0];\n\n        if (markup) {\n            // ensure range does not extend over breaks\n            // around markups\n\n            from = from < markup[1] ? markup[1] : from;\n            to = to > markup[2] ? markup[2] : to;\n        }\n\n        Editor.ingestMarkups(nextState.markups, tag, from, to);\n\n        for (let i = 0, len = nextState.markups.length; i < len; i++) {\n            const markup = new Markup(nextState.markups[i]);\n\n            // NB: When inserting an inline markup there should always be at\n            // least one block markup in the array\n\n            insertIndex = i;\n\n            if (markup.start > from) {\n                // Markup starts after markup to insert, insert at index\n\n                break;\n            } else if (i === len - 1) {\n                // Last markup, insert after\n\n                insertIndex++;\n\n                break;\n            }\n        }\n\n        nextState.markups.splice(insertIndex, 0, [tag, from, to]);\n\n        Editor.joinMarkups(nextState.markups, from);\n        Editor.joinMarkups(nextState.markups, to);\n\n        return nextState;\n    }\n\n    static removeInlineMarkup(prevState, tag, from, to) {\n        const nextState = Util.extend(new State(), prevState, true);\n        const enveloped = prevState.envelopedBlockMarkups || [];\n\n        if (enveloped.length > 1) {\n            let formattedState = nextState;\n\n            // Split and delegate the command\n\n            formattedState.envelopedBlockMarkups.length = 0;\n\n            enveloped.forEach((markup, i) => {\n                const formatFrom = i === 0 ? from : markup.start;\n                const formatTo   = i === enveloped.length - 1 ? to : markup.end;\n\n                formattedState = Editor.removeInlineMarkup(formattedState, tag, formatFrom, formatTo);\n            });\n\n            return formattedState;\n        }\n\n        Editor.ingestMarkups(nextState.markups, tag, from, to);\n\n        return nextState;\n    }\n\n    static replaceBlockMarkup() {\n\n    }\n\n    /**\n     * Adjusts the position/length of existing markups in\n     * response to characters being added/removed.\n     *\n     * @static\n     * @param {Array.<Markup>} markups\n     * @param {number} fromIndex\n     * @param {number} toIndex\n     * @param {number} totalAdded\n     * @param {number} adjustment\n     * @return {Array.<Markups>}\n     */\n\n    static adjustMarkups(markups, fromIndex, toIndex, totalAdded, adjustment) {\n        const newMarkups = [];\n\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [tag, markupStart, markupEnd] = markup;\n            const newMarkup = new Markup(markup);\n\n            let removeMarkup = false;\n\n            if (!(markup instanceof Markup)) {\n                markup = new Markup(markup);\n            }\n\n            if (markupStart >= fromIndex && markupEnd <= toIndex) {\n                // Selection completely envelopes markup\n\n                if (markupStart === fromIndex && (markup.isBlock || markup.isInline && totalAdded > 0)) {\n                    // Markup should be preserved is a) is block element,\n                    // b) is inline and inserting\n                    newMarkup[2] = markupStart + totalAdded;\n                } else if (!markup.isBlock || markupStart > fromIndex) {\n                    removeMarkup = true;\n                }\n            } else if (markupStart <= fromIndex && markupEnd >= toIndex) {\n                // Selection within markup or equal to markup\n\n                newMarkup[2] += adjustment;\n\n                if (markup.isInline && (markupStart === fromIndex && fromIndex === toIndex)) {\n                    // Collapsed caret at start of inline markup\n\n                    newMarkup[1] += adjustment;\n                }\n            } else if (markupStart >= toIndex) {\n                // Markup starts after Selection\n\n                newMarkup[1] += adjustment;\n                newMarkup[2] += adjustment;\n            } else if (fromIndex < markupStart && toIndex > markupStart && toIndex < markupEnd) {\n                // Selection partially envelopes markup from start\n\n                if (markup.isInline) {\n                    newMarkup[1] += (adjustment + (toIndex - markupStart));\n                    newMarkup[2] += adjustment;\n                } else {\n                    // Previous block markup will consume this one, remove\n\n                    removeMarkup = true;\n                }\n            } else if (fromIndex > markupStart && fromIndex < markupEnd && toIndex > markupEnd) {\n                // Selection partially envelopes markup from end\n\n                if (markup.isInline) {\n                    // Extend inline markup to end of insertion\n\n                    newMarkup[2] = fromIndex + totalAdded;\n                } else {\n                    const closingBlockMarkup = Editor.getClosingBlockMarkup(markups, i, toIndex);\n\n                    // Extend block markup to end of closing block +/-\n                    // adjustment\n\n                    newMarkup[2] = closingBlockMarkup[2] + adjustment;\n                }\n            }\n\n            if (!removeMarkup) {\n                newMarkups.push(newMarkup);\n            }\n        }\n\n        return newMarkups;\n    }\n\n    /**\n     * Returns the closing block markup after the markup at the\n     * provided index.\n     *\n     * @static\n     * @param  {Array.<Markup>} markups\n     * @param  {number} markupIndex\n     * @param  {number} toIndex\n     * @return {(Markup|null)}\n     */\n\n    static getClosingBlockMarkup(markups, markupIndex, toIndex) {\n        for (let i = markupIndex + 1, markup; (markup = markups[i]); i++) {\n            if (!(markup instanceof Markup)) {\n                markup = new Markup(markup);\n            }\n\n            if (markup.isBlock && markup.start <= toIndex && markup.end >= toIndex) {\n                return markup;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Trims leading/trailing whitespace from block elements\n     * when a block is split.\n     *\n     * Returns the total adjustment made to the text before the split.\n     *\n     * @param  {State}  nextState\n     * @param  {number} splitIndex\n     * @return {number}\n     */\n\n    static trimWhitespace(nextState, splitIndex) {\n        let totalAllTrimmed = 0;\n        let caretAdjustment = 0;\n\n        for (let i = 0; i < nextState.markups.length; i++) {\n            const markupRaw = nextState.markups[i];\n\n            if (totalAllTrimmed !== 0) {\n                // If previous adjustments have been made, adjust markup\n                // position accordingly\n\n                markupRaw[1] += totalAllTrimmed;\n                markupRaw[2] += totalAllTrimmed;\n            }\n\n            const markup = new Markup(markupRaw);\n\n            if (!markup.isBlock) continue;\n\n            const before  = nextState.text.slice(0, markup.start);\n            const content = nextState.text.slice(markup.start, markup.end);\n            const after   = nextState.text.slice(markup.end);\n\n            // Trim whitespace from start and end of blocks\n\n            const trimmed = content.trim();\n            const totalTrimmed = trimmed.length - content.length;\n\n            // TODO: seems not to be quite working.. needs further\n            // investigation?\n\n            if (totalTrimmed === 0) continue;\n\n            totalAllTrimmed += totalTrimmed;\n\n            if (markup.start < splitIndex) {\n                // If the affected markup starts before the split index,\n                // increase the total\n\n                caretAdjustment += totalTrimmed;\n            }\n\n            // Reduce markup end by trimmed amount\n\n            markupRaw[2] += totalTrimmed;\n\n            // Rebuild text\n\n            nextState.text = before + trimmed + after;\n        }\n\n        return caretAdjustment;\n    }\n\n    /**\n     * Splits a markup at the provided index, creating a new markup\n     * of the same type starting a character later. Assumes the addition\n     * of a single new line character, but this could be provided for\n     * further flexibility.\n     *\n     * @param  {Array.<Markup>} markups\n     * @param  {number}         index\n     * @return {Array.<Markup>}\n     */\n\n    static splitMarkups(markups, index) {\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [markupTag, markupStart, markupEnd] = markup;\n\n            let newMarkup = null;\n\n            if (markupStart <= index && markupEnd >= index) {\n                const newTag = markup.isBlock && markupEnd === index + 1 ? 'p' : markupTag;\n\n                markup[2] = index;\n\n                newMarkup = new Markup([newTag, index + 1, markupEnd]);\n\n                markups.splice(i + 1, 0, newMarkup);\n\n                i++;\n            }\n        }\n\n        return markups;\n    }\n\n    /**\n     * Joins two adjacent markups at a provided (known) index.\n     *\n     * @param  {Array.<Markup>} markups\n     * @param  {number} index\n     * @return {Array.<Markup>}\n     */\n\n    static joinMarkups(markups, index) {\n        const closingInlines = {};\n\n        // TODO: use quick search to find start index\n\n        let closingBlock = null;\n\n        for (let i = 0; i < markups.length; i++) {\n            const markup = new Markup(markups[i]);\n\n            if (markup.end === index) {\n                if (markup.isBlock) {\n                    // Block markup closes at index\n\n                    closingBlock = markups[i];\n                } else {\n                    closingInlines[markup.tag] = markups[i];\n                }\n            } else if (markup.start === index) {\n                let extend = null;\n\n                if (markup.isBlock && closingBlock) {\n                    // Block markup opens at index, and will touch\n                    // previous block\n\n                    extend = closingBlock;\n                } else if (markup.isInline && closingInlines[markup.tag]) {\n                    extend = closingInlines[markup.tag];\n                }\n\n                if (extend) {\n                    // Markup should be extended\n\n                    extend[2] = markup[2];\n\n                    markups.splice(i, 1);\n\n                    i--;\n                }\n            } else if (markup.start > index) {\n                // Passed joining index, done\n\n                break;\n            }\n        }\n\n        return markups;\n    }\n\n    /**\n     * Removes or shortens any markups matching the provided tag within the\n     * provided range.\n     *\n     * @static\n     * @param {Array.<Markup>} markups\n     * @param {string}         tag\n     * @param {number}         from\n     * @param {number}         to\n     */\n\n    static ingestMarkups(markups, tag, from, to) {\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [markupTag, markupStart, markupEnd] = markup;\n\n            if (markupTag !== tag) continue;\n\n            if (markupStart >= from && markupEnd <= to) {\n                // Markup enveloped, remove\n\n                markups.splice(i, 1);\n\n                i--;\n            } else if (markupStart < from && markupEnd >= to) {\n                // Markup overlaps start, shorten by moving end to\n                // start of selection\n\n                if (markupEnd > to) {\n                    // Split markup into two\n\n                    const newMarkup = [markupTag, to, markupEnd];\n\n                    markups.splice(i + 1, 0, newMarkup);\n\n                    i++;\n                }\n\n                markup[2] = from;\n            } else if (markupStart > from && markupStart < to) {\n                // Markup overlaps end, shorten by moving start to\n                // end of selection\n\n                markup[1] = to;\n            } else if (markupStart === from && markupEnd > to) {\n                // Markup envelops range from start\n\n                markup[1] = to;\n            }\n        }\n    }\n\n    /**\n     * Determines which block and inline markups should be \"active\"\n     * or \"enveloped\" for particular selection.\n     *\n     * @static\n     * @param  {State} state\n     * @param  {Range} range\n     * @return {void}\n     */\n\n    static setActiveMarkups(state, range) {\n        state.activeBlockMarkup = null;\n\n        state.activeInlineMarkups.length   =\n        state.envelopedBlockMarkups.length = 0;\n\n        let adjacentInlineMarkups = [];\n        let parentBlock = null;\n\n        for (let i = 0; i < state.markups.length; i++) {\n            const markup = new Markup(state.markups[i]);\n            const lastAdjacent = adjacentInlineMarkups[adjacentInlineMarkups.length - 1];\n\n            // Active markups are those that surround the start of the\n            // selection and should be highlighted in any UI\n\n            if (markup.start <= range.from && markup.end >= range.from) {\n                if (markup.isBlock) {\n                    // Only one block markup may be active at a time\n                    // (the first one)\n\n                    state.activeBlockMarkup = markup;\n                } else if (markup.end >= range.to) {\n                    // Simple enveloped inline markup\n\n                    state.activeInlineMarkups.push(markup);\n                } else if (markup.end === parentBlock.end) {\n                    // Potential first adjacent inline markup\n\n                    adjacentInlineMarkups.push(markup);\n\n                    continue;\n                }\n            }\n\n            if (\n                lastAdjacent && lastAdjacent.tag === markup.tag &&\n                (\n                    markup.start === parentBlock.start && markup.end >= range.to ||\n                    markup.start === parentBlock.start && markup.end === parentBlock.end\n                )\n            ) {\n                // Continuation or end of an adjacent inline markup\n\n                adjacentInlineMarkups.push(markup);\n\n                if (range.to <= markup.end) {\n                    // Final adjacent inline markup, move all to state\n\n                    state.activeInlineMarkups.push(...adjacentInlineMarkups);\n                }\n            } else if (markup.isInline) {\n                // Doesn't match tag, or not a continuation, reset\n\n                adjacentInlineMarkups.length = 0;\n            }\n\n            if (!markup.isBlock) continue;\n\n            parentBlock = markup;\n\n            // Enveloped block markups are those that are partially or\n            // completely enveloped by the selection.\n\n            if (\n                // overlapping end\n\n                (range.from >= markup.start && range.from < markup.end) ||\n\n                // overlapping start\n\n                (range.to > markup.start && range.to <= markup.end) ||\n\n                // enveloped\n\n                (range.from <= markup.start && range.to >= markup.end)\n            ) {\n                state.envelopedBlockMarkups.push(markup);\n            }\n        }\n    }\n}\n\nexport default Editor;\n\n\n// WEBPACK FOOTER //\n// ./src/Editor.js","module.exports = {\"text\":\"Lorem ipsum dolor.\\n\\nSit amet.\",\"markups\":[[\"p\",0,18],[\"p\",19,19],[\"p\",20,29]]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./tests/data.json\n// module id = 19\n// module chunks = 0"],"sourceRoot":""}