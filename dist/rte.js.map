{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 237931b651dc106d4bec","webpack:///./src/factory.js","webpack:///./src/RichTextEditor.js","webpack:///./src/Dom.js","webpack:///./src/Util.js","webpack:///./src/models/Markup.js","webpack:///./src/models/Node.js","webpack:///./src/models/Caret.js","webpack:///./src/models/Range.js","webpack:///./src/constants/Common.js","webpack:///./src/models/State.js","webpack:///./src/models/Action.js","webpack:///./src/EventHandler.js","webpack:///./src/constants/Actions.js","webpack:///./src/constants/Keys.js","webpack:///./src/TreeBuilder.js","webpack:///./src/Renderer.js","webpack:///./src/actions/reducer.js","webpack:///./src/Editor.js","webpack:///./tests/data.json","webpack:///./src/constants/Markups.js"],"names":["factory","el","richTextEditor","attach","module","exports","RichTextEditor","dom","eventHandler","root","history","historyIndex","Object","defineProperties","state","get","initialState","push","buildInitialState","render","bindEvents","extend","markups","length","map","markup","buildModelFromState","innerHTML","renderNodes","childNodes","positionCaret","selection","type","content","range","window","getSelection","getRangeFromSelection","nextState","reduce","prevState","action","TypeError","toString","console","log","node","path","unshift","index","parentElement","i","anchorPath","getPathFromNode","anchorNode","virtualAnchorNode","getNodeByPath","from","to","extentPath","virtualExtentNode","isRtl","rangeFrom","rangeTo","isCollapsed","extentNode","anchorOffset","extentOffset","offset","Math","min","start","end","document","createRange","virtualNode","nodeLeft","nodeRight","offsetStart","offsetEnd","setStart","collapse","removeAllRanges","addRange","setEnd","setBaseAndExtent","buildTreeFromRoot","text","Dom","seal","Util","target","source","deep","sourceKeys","Array","isArray","keys","key","descriptor","getOwnPropertyDescriptor","arr","prev","curr","concat","fn","interval","immediate","timeoutId","args","arguments","later","apply","clearTimeout","setTimeout","last","now","Date","difference","Infinity","selector","includeSelf","parent","parentNode","matches","body","selectors","split","childSelectors","children","tempId","id","pop","querySelectorAll","join","removeAttribute","includeNonElements","previousSibling","previousElementSibling","str","toLowerCase","replace","$1","toUpperCase","camelCase","charAt","slice","Markups","Markup","tag","H1","H2","H3","H4","H5","H6","P","indexOf","MARKUP_TYPE_BLOCK","MARKUP_TYPE_INLINE","isBlock","isInline","Node","isText","Caret","Range","direction","isLtr","DIRECTION_LTR","Symbol","DIRECTION_RTL","State","activeBlockMarkup","activeInlineMarkups","envelopedBlockMarkups","Action","Actions","Keys","EventHandler","delegator","bind","addEventListener","removeEventListener","e","eventType","pascalCase","Error","preventDefault","applyAction","INSERT","activeElement","SET_SELECTION","actionType","metaKey","A","B","TOGGLE_BOLD","I","TOGGLE_ITALIC","Z","shiftKey","redo","undo","ENTER","SHIFT_RETURN","RETURN","BACKSPACE","DELETE","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","NONE","C","V","S","TreeBuilder","openNodes","isAtLeaf","requiresNewLeaf","j","closedNode","textNode","closeNode","newNode","getOpenNode","leaf","Renderer","nodes","renderNode","html","match","assign","setActiveMarkups","insert","fromIndex","toIndex","isTagActive","removeInlineMarkup","addInlineMarkup","Editor","totalDeleted","totalAdded","adjustment","collapsed","totalCollapsed","collapseWhitespace","adjustMarkups","splitMarkups","joinMarkups","insertIndex","formattedState","forEach","formatFrom","formatTo","ingestMarkups","splice","newMarkups","markupStart","markupEnd","newMarkup","removeMarkup","nextBlockMarkup","getNextBlockMarkup","markupTag","newTag","closingInlines","closingBlock","STRONG","EM","BR"],"mappings":"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","file":"rte.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rte\"] = factory();\n\telse\n\t\troot[\"rte\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 237931b651dc106d4bec","import RichTextEditor from './RichTextEditor';\nimport data           from '../tests/data.json';\n\nfunction factory(el) {\n    const richTextEditor = new RichTextEditor();\n\n    richTextEditor.attach(el, data);\n\n    return richTextEditor;\n}\n\nmodule.exports = factory;\n\n\n// WEBPACK FOOTER //\n// ./src/factory.js","import Dom          from './Dom';\nimport Util         from './Util';\nimport Markup       from './models/Markup';\nimport Node         from './models/Node';\nimport Caret        from './models/Caret';\nimport Range        from './models/Range';\nimport State        from './models/State';\nimport Action       from './models/Action';\nimport EventHandler from './EventHandler';\nimport TreeBuilder  from './TreeBuilder';\nimport Renderer     from './Renderer';\nimport reducer      from './actions/reducer';\n\nimport {\n    SET_SELECTION\n} from './constants/Actions';\n\nimport {\n    DIRECTION_LTR,\n    DIRECTION_RTL\n} from './constants/Common';\n\nclass RichTextEditor {\n    constructor() {\n        this.dom            = new Dom();\n        this.eventHandler   = new EventHandler();\n        this.root           = null;\n        this.history        = [];\n        this.historyIndex   = -1;\n\n        Object.defineProperties(this, {\n            state: {\n                get() {\n                    return this.history[this.historyIndex];\n                }\n            }\n        });\n    }\n\n    attach(el, initialState=new State()) {\n        this.dom.root = el;\n\n        this.history.push(this.buildInitialState(initialState));\n\n        this.historyIndex++;\n\n        this.render();\n\n        this.eventHandler.bindEvents(this.dom.root, this);\n    }\n\n    /**\n     * @param   {object} initialState\n     * @return  {State}\n     */\n\n    buildInitialState(initialState) {\n        const state = Util.extend(new State(), initialState);\n\n        if (state.markups.length < 1) {\n            state.markups.push(['p', 0, 0]);\n        }\n\n        // TODO: if text but no markups, wrap entire in <p>\n\n        state.markups = state.markups.map(markup => new Markup(markup));\n\n        return state;\n    }\n\n    render() {\n        this.root = RichTextEditor.buildModelFromState(this.state);\n\n        this.dom.root.innerHTML = Renderer.renderNodes(this.root.childNodes);\n    }\n\n    undo() {\n        if (this.historyIndex === 0) return;\n\n        this.historyIndex--;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n    }\n\n    redo() {\n        if (this.history.length - 1 === this.historyIndex) return;\n\n        this.historyIndex++;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n    }\n\n    applyAction(type, content='') {\n        let range = null;\n\n        if (type === SET_SELECTION) {\n            // Detect new selection from browser API\n\n            const selection = window.getSelection();\n\n            range = this.getRangeFromSelection(selection);\n        } else {\n            // Use previous range\n\n            range = this.state.selection;\n        }\n\n        const nextState = [type].reduce((prevState, type) => {\n            const action = new Action();\n\n            action.type     = type;\n            action.range    = range;\n            action.content  = content;\n\n            return reducer(prevState, action);\n        }, this.state);\n\n        if (!(nextState instanceof State)) {\n            throw new TypeError(`[RichTextEditor] Action type \"${type.toString()}\" did not return a valid state object`);\n        }\n\n        if (nextState === this.state) return;\n\n        // TODO: discern between 'push' vs 'replace' commands i.e. inserting a\n        // char vs moving a cursor\n\n        console.log(type);\n\n        this.history.push(nextState);\n\n        this.historyIndex++;\n\n        // Chop off any divergent future state\n\n        this.history.length = this.historyIndex + 1;\n\n        if (type === SET_SELECTION) return;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n\n        // console.log(JSON.stringify(this.state.markups));\n    }\n\n    getPathFromNode(node) {\n        const path = [];\n\n        while (node && node !== this.dom.root) {\n            path.unshift(Util.index(node, true));\n\n            node = node.parentElement;\n        }\n\n        return path;\n    }\n\n    getNodeByPath(path, root) {\n        let node = root;\n        let index = -1;\n        let i = 0;\n\n        while (typeof (index = path[i]) === 'number') {\n            node = node.childNodes[index];\n\n            i++;\n        }\n\n        return node || null;\n    }\n\n    /**\n     * @param   {Selection} selection\n     * @return  {Range}\n     */\n\n    // TODO: consolodate range/selection models, no need for both\n\n    getRangeFromSelection(selection) {\n        const anchorPath = this.getPathFromNode(selection.anchorNode);\n        const virtualAnchorNode = this.getNodeByPath(anchorPath, this.root);\n        const from = new Caret();\n        const to = new Caret();\n\n        let extentPath = anchorPath;\n        let virtualExtentNode = virtualAnchorNode;\n        let isRtl = false;\n        let rangeFrom = -1;\n        let rangeTo = -1;\n\n        if (!selection.isCollapsed) {\n            extentPath = this.getPathFromNode(selection.extentNode);\n            virtualExtentNode = this.getNodeByPath(extentPath, this.root);\n        }\n\n        isRtl = extentPath < anchorPath || !(extentPath > anchorPath) && selection.anchorOffset > selection.extentOffset;\n\n        from.node   = to.node = isRtl ? virtualExtentNode : virtualAnchorNode;\n        from.offset = to.offset = isRtl ? selection.extentOffset : selection.anchorOffset;\n        from.path   = to.path = isRtl ? extentPath : anchorPath;\n\n        if (!selection.isCollapsed) {\n            to.node     = isRtl ? virtualAnchorNode : virtualExtentNode;\n            to.offset   = isRtl ? selection.anchorOffset : selection.extentOffset;\n            to.path     = isRtl ? anchorPath : extentPath;\n        }\n\n        rangeFrom = Math.min(from.node.start + from.offset, from.node.end);\n        rangeTo = Math.min(to.node.start + to.offset, to.node.end);\n\n        return new Range(rangeFrom, rangeTo, isRtl ? DIRECTION_RTL : DIRECTION_LTR);\n    }\n\n    positionCaret({from, to, isRtl}) {\n        const range = document.createRange();\n        const selection = window.getSelection();\n\n        let childNodes  = this.root.childNodes;\n        let virtualNode = null;\n        let nodeLeft    = null;\n        let nodeRight   = null;\n        let offsetStart = -1;\n        let offsetEnd   = -1;\n\n        for (let i = 0; (virtualNode = childNodes[i]); i++) {\n            // Node ends before caret\n\n            if (virtualNode.end < from) continue;\n\n            // The desired node is this node, or within this node\n\n            if (virtualNode.childNodes.length) {\n                // Node has children, drop down until at leaf\n\n                childNodes = virtualNode.childNodes;\n\n                i = -1;\n\n                continue;\n            }\n\n            // At leaf\n\n            offsetStart = from - virtualNode.start;\n\n            break;\n        }\n\n        nodeLeft = this.getNodeByPath(virtualNode.path, this.dom.root);\n\n        range.setStart(nodeLeft, offsetStart);\n\n        if (from === to) {\n            // Single caret\n\n            range.collapse(true);\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            return;\n        }\n\n        // Multi-character selection, reset child nodes\n\n        childNodes = this.root.childNodes;\n\n        for (let i = 0; (virtualNode = childNodes[i]); i++) {\n            if (virtualNode.end < to) continue;\n\n            if (virtualNode.childNodes.length) {\n                childNodes = virtualNode.childNodes;\n\n                i = -1;\n\n                continue;\n            }\n\n            offsetEnd = to - virtualNode.start;\n\n            break;\n        }\n\n        nodeRight = this.getNodeByPath(virtualNode.path, this.dom.root);\n\n        range.setEnd(nodeRight, offsetEnd);\n\n        selection.removeAllRanges();\n\n        if (isRtl) {\n            selection.setBaseAndExtent(nodeRight, offsetEnd, nodeLeft, offsetStart);\n        } else {\n            selection.setBaseAndExtent(nodeLeft, offsetStart, nodeRight, offsetEnd);\n        }\n    }\n\n    static buildModelFromState(state) {\n        const root = new Node();\n\n        TreeBuilder.buildTreeFromRoot(root, state.text, state.markups);\n\n        return root;\n    }\n}\n\nexport default RichTextEditor;\n\n\n// WEBPACK FOOTER //\n// ./src/RichTextEditor.js","class Dom {\n    constructor() {\n        this.root = null;\n\n        Object.seal(this);\n    }\n}\n\nexport default Dom;\n\n\n// WEBPACK FOOTER //\n// ./src/Dom.js","class Util {\n\n    /**\n     * @param   {object} target\n     * @param   {object} source\n     * @param   {boolean} deep\n     * @return  {object}\n     */\n\n    static extend(target, source, deep) {\n        let sourceKeys = [];\n\n        if (!target || typeof target !== 'object') {\n            throw new TypeError('[Util#extend] Target must be a valid object');\n        }\n\n        deep = deep || false;\n\n        if (Array.isArray(source)) {\n            for (let i = 0; i < source.length; i++) {\n                sourceKeys.push(i);\n            }\n        } else if (source) {\n            sourceKeys = Object.keys(source);\n        }\n\n        for (let i = 0; i < sourceKeys.length; i++) {\n            let key = sourceKeys[i];\n            let descriptor = Object.getOwnPropertyDescriptor(source, key);\n\n            // Skip computed properties\n\n            if (typeof descriptor.get === 'function') continue;\n\n            if (!deep || typeof source[key] !== 'object') {\n                // All non-object primitives, or all properties if\n                // shallow extend\n\n                target[key] = source[key];\n            } else if (Array.isArray(source[key])) {\n                // Arrays\n\n                if (!target[key]) {\n                    target[key] = [];\n                }\n\n                this.extend(target[key], source[key], deep);\n            } else {\n                // Objects\n\n                if (!target[key]) {\n                    target[key] = {};\n                }\n\n                this.extend(target[key], source[key], deep);\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * Flattens an array.\n     *\n     * @param {Array} arr\n     * @return {Array}\n     */\n\n    static flattenArray(arr) {\n        return arr.reduce((prev, curr) => {\n            if (Array.isArray(curr)) {\n                return prev.concat(curr);\n            }\n\n            prev.push(curr);\n\n            return prev;\n        }, []);\n    }\n\n    /**\n     * Returns a function which calls the provided function\n     * only after the specified interval has elapsed between\n     * function calls. An optional `immediate` boolean will\n     * cause the provided function to be called once immediately\n     * before waiting.\n     *\n     * @param   {function}  fn\n     * @param   {number}    interval\n     * @param   {boolean}   [immediate=false]\n     * @return  {function}\n     */\n\n    static debounce(fn, interval, immediate) {\n        let timeoutId = -1;\n\n        return function() {\n            const args = arguments;\n\n            const later = () => {\n                timeoutId = -1;\n\n                fn.apply(this, args); // eslint-disable-line no-invalid-this\n            };\n\n            if (timeoutId < 0 && immediate) {\n                later();\n            } else {\n                clearTimeout(timeoutId);\n\n                timeoutId = setTimeout(later, interval);\n            }\n        };\n    }\n\n    /**\n     * Returns a function which calls the provided function once per maximum\n     * specified interval.\n     *\n     * @param   {function}  fn\n     * @param   {number}    interval\n     * @return  {function}\n     */\n\n    static throttle(fn, interval) {\n        let timeoutId = -1;\n        let last = -1;\n\n        return function() {\n            const args = arguments;\n            const now = Date.now();\n            const difference = last ? now - last : Infinity;\n\n            const later = () => {\n                last = now;\n\n                fn.apply(this, args); // eslint-disable-line no-invalid-this\n            };\n\n            if (!last || difference >= interval) {\n                later();\n            } else {\n                clearTimeout(timeoutId);\n\n                timeoutId = setTimeout(later, interval - difference);\n            }\n        };\n    }\n\n    /**\n     * @param   {HTMLElement}       el\n     * @param   {string}            selector\n     * @param   {boolean}           [includeSelf]\n     * @return  {HTMLElement|null}\n     */\n\n    static closestParent(el, selector, includeSelf) {\n        let parent = el.parentNode;\n\n        if (includeSelf && el.matches(selector)) {\n            return el;\n        }\n\n        while (parent && parent !== document.body) {\n            if (parent.matches && parent.matches(selector)) {\n                return parent;\n            } else if (parent.parentNode) {\n                parent = parent.parentNode;\n            } else {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * @param   {Element}     el\n     * @param   {string}      selector\n     * @return  {Element[]}\n     */\n\n    static children(el, selector) {\n        const selectors = selector.split(',');\n        const childSelectors = [];\n\n        let children = null;\n        let tempId   = '';\n\n        if (!el.id) {\n            tempId = '_temp_';\n\n            el.id = tempId;\n        }\n\n        while (selectors.length) {\n            childSelectors.push('#' + el.id + '>' + selectors.pop());\n        }\n\n        children = document.querySelectorAll(childSelectors.join(', '));\n\n        if (tempId) {\n            el.removeAttribute('id');\n        }\n\n        return children;\n    }\n\n    /**\n     * @param   {Node}        node\n     * @param   {boolean}     [includeNonElements=false]\n     * @return  {Element[]}\n     */\n\n    static index(node, includeNonElements=false) {\n        let index = 0;\n\n        while ((node = includeNonElements ? node.previousSibling : node.previousElementSibling) !== null) {\n            index++;\n        }\n\n        return index;\n    }\n\n    /**\n     * Converts a dash or snake-case string to camel case.\n     *\n     * @param   {string}    str\n     * @return  {string}\n     */\n\n    static camelCase(str) {\n        return str.toLowerCase()\n            .replace(/([_-][a-z0-9])/g, $1 => $1.toUpperCase().replace(/[_-]/, ''));\n    }\n\n    /**\n     * Converts a dash or snake-case string to pascal case.\n     *\n     * @param   {string}    str\n     * @return  {string}\n     */\n\n    static pascalCase(str) {\n        return (str = Util.camelCase(str))\n            .charAt(0)\n            .toUpperCase() + str.slice(1);\n    }\n\n    /**\n     * Converts a camel or pascal-case string to dash case.\n     *\n     * @param   {string}    str\n     * @return  {string}\n     */\n\n    static dashCase(str) {\n        return str.replace(/([A-Z])/g, '-$1')\n            .replace(/^-/, '')\n            .toLowerCase();\n    }\n}\n\nexport default Util;\n\n\n// WEBPACK FOOTER //\n// ./src/Util.js","import * as Markups from '../constants/Markups';\n\nclass Markup extends Array {\n    constructor([tag, start, end]) {\n        super();\n\n        this[0] = tag;\n        this[1] = start;\n        this[2] = end;\n\n        Object.defineProperties(this, {\n            tag: {\n                get: () => this[0]\n            },\n            start: {\n                get: () => this[1]\n            },\n            end: {\n                get: () => this[2]\n            },\n            type: {\n                get() {\n                    return [\n                        Markups.H1,\n                        Markups.H2,\n                        Markups.H3,\n                        Markups.H4,\n                        Markups.H5,\n                        Markups.H6,\n                        Markups.P\n                    ].indexOf(this[0]) > -1 ? Markups.MARKUP_TYPE_BLOCK : Markups.MARKUP_TYPE_INLINE;\n                }\n            },\n            isBlock: {\n                get() {\n                    return this.type === Markups.MARKUP_TYPE_BLOCK;\n                }\n            },\n            isInline: {\n                get() {\n                    return this.type === Markups.MARKUP_TYPE_INLINE;\n                }\n            }\n        });\n\n        Object.seal(this);\n    }\n}\n\nexport default Markup;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Markup.js","class Node {\n    constructor() {\n        this.childNodes = [];\n        this.parent     = null;\n        this.start      = -1;\n        this.end        = -1;\n        this.tag        = '';\n        this.text       = '';\n        this.path       = [];\n\n        Object.seal(this);\n    }\n\n    get isText() {\n        return this.tag === '';\n    }\n\n    get isBlock() {\n        return ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p'].indexOf(this.tag);\n    }\n\n    get isInline() {\n        return !this.isText && !this.isBlock;\n    }\n}\n\nexport default Node;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Node.js","class Caret {\n    constructor() {\n        this.path = null;\n        this.node = null;\n        this.offset = null;\n\n        Object.seal(this);\n    }\n}\n\nexport default Caret;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Caret.js","import {\n    DIRECTION_LTR,\n    DIRECTION_RTL\n} from '../constants/Common';\n\nclass Range {\n    constructor(from=-1, to=-1, direction=DIRECTION_LTR) {\n        this.from       = from;\n        this.to         = to;\n        this.direction  = direction;\n\n        Object.seal(this);\n    }\n\n    get isCollapsed() {\n        return this.from === this.to;\n    }\n\n    get isLtr() {\n        return this.direction === DIRECTION_LTR;\n    }\n\n    get isRtl() {\n        return this.direction === DIRECTION_RTL;\n    }\n\n    get anchor() {\n        if (this.isLtr) {\n            return this.from;\n        }\n\n        return this.to;\n    }\n\n    get extent() {\n        if (this.isLtr) {\n            return this.to;\n        }\n\n        return this.from;\n    }\n}\n\nexport default Range;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Range.js","export const DIRECTION_LTR = Symbol('DIRECTION_LTR');\nexport const DIRECTION_RTL = Symbol('DIRECTION_RTL');\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Common.js","import Range from './Range';\n\nclass State {\n    constructor() {\n        this.text                   = '';\n        this.markups                = [];\n        this.selection              = new Range();\n        this.activeBlockMarkup      = null;\n        this.activeInlineMarkups    = [];\n        this.envelopedBlockMarkups  = [];\n\n        Object.seal(this);\n    }\n\n    get length() {\n        return this.text.length;\n    }\n\n    isTagActive(tag) {\n        for (let i = 0, markup; (markup = this.activeInlineMarkups[i]); i++) {\n            if (markup[0] === tag) return true;\n        }\n\n        return false;\n    }\n}\n\nexport default State;\n\n\n// WEBPACK FOOTER //\n// ./src/models/State.js","class Action {\n    constructor() {\n        this.type    = null;\n        this.range   = null;\n        this.content = '';\n\n        Object.seal(this);\n    }\n}\n\nexport default Action;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Action.js","import Util         from './Util';\nimport * as Actions from './constants/Actions';\nimport * as Keys    from './constants/Keys';\n\nclass EventHandler {\n    bindEvents(root, richTextEditor) {\n        this.delegator = this.delegator.bind(this, richTextEditor);\n\n        root.addEventListener('keypress', this.delegator);\n        root.addEventListener('keydown', this.delegator);\n        root.addEventListener('mousedown', this.delegator);\n        window.addEventListener('mouseup', this.delegator);\n    }\n\n    unbindEvents(root) {\n        root.removeEventListener('keypress', this.delegator);\n        root.removeEventListener('keydown', this.delegator);\n        root.removeEventListener('click', this.delegator);\n        root.addEventListener('mousedown', this.delegator);\n        window.addEventListener('mouseup', this.delegator);\n    }\n\n    delegator(richTextEditor, e) {\n        const eventType = e.type;\n        const fn = this['handle' + Util.pascalCase(eventType)];\n\n        if (typeof fn !== 'function') {\n            throw new Error(`[EventHandler] No handler found for event \"${eventType}\"`);\n        }\n\n        fn(e, richTextEditor);\n    }\n\n    handleKeypress(e, richTextEditor) {\n        e.preventDefault();\n\n        richTextEditor.applyAction(Actions.INSERT, e.key);\n    }\n\n    handleMouseup(e, richTextEditor) {\n        if (richTextEditor.dom.root !== document.activeElement) return;\n\n        richTextEditor.applyAction(Actions.SET_SELECTION);\n    }\n\n    handleMousedown(e, richTextEditor) {\n        richTextEditor.applyAction(Actions.SET_SELECTION);\n    }\n\n    handleKeydown(e, richTextEditor) {\n        const key = e.key.toLowerCase();\n\n        let actionType = '';\n\n        if (e.metaKey) {\n            switch (key) {\n                case Keys.A:\n                    actionType = Actions.SET_SELECTION;\n\n                    break;\n                case Keys.B:\n                    actionType = Actions.TOGGLE_BOLD;\n\n                    e.preventDefault();\n\n                    break;\n                case Keys.I:\n                    actionType = Actions.TOGGLE_ITALIC;\n\n                    e.preventDefault();\n\n                    break;\n                // case Keys.C:\n                //    command = 'copy';\n\n                //     break;\n                // case Keys.V:\n                //     command = 'paste';\n\n                //     break;\n                // case Keys.S:\n                //     command = 'save';\n\n                //     break;\n                case Keys.Z:\n                    e.preventDefault();\n\n                    return e.shiftKey ? richTextEditor.redo() : richTextEditor.undo();\n            }\n        }\n\n        switch (key) {\n            case Keys.ENTER:\n                actionType = e.shiftKey ? Actions.SHIFT_RETURN : Actions.RETURN;\n\n                e.preventDefault();\n\n                break;\n            case Keys.BACKSPACE:\n                actionType = Actions.BACKSPACE;\n\n                e.preventDefault();\n\n                break;\n            case Keys.DELETE:\n                actionType = Actions.DELETE;\n\n                e.preventDefault();\n\n                break;\n            case Keys.ARROW_LEFT:\n            case Keys.ARROW_RIGHT:\n            case Keys.ARROW_UP:\n            case Keys.ARROW_DOWN:\n                actionType = Actions.SET_SELECTION;\n\n                break;\n        }\n\n        if (!actionType || actionType === Actions.NONE) return;\n\n        setTimeout(() => richTextEditor.applyAction(actionType));\n    }\n}\n\nexport default EventHandler;\n\n\n// WEBPACK FOOTER //\n// ./src/EventHandler.js","export const SET_SELECTION      = Symbol('SET_SELECTION');\nexport const INSERT             = Symbol('ACTION_TYPE_INSERT');\nexport const BACKSPACE          = Symbol('ACTION_TYPE_BACKSPACE');\nexport const DELETE             = Symbol('ACTION_TYPE_DELETE');\nexport const RETURN             = Symbol('ACTION_TYPE_RETURN');\nexport const SHIFT_RETURN       = Symbol('ACTION_TYPE_SHIFT_RETURN');\nexport const TOGGLE_BOLD        = Symbol('ACTION_TYPE_TOGGLE_BOLD');\nexport const TOGGLE_ITALIC      = Symbol('ACTION_TYPE_TOGGLE_ITALIC');\nexport const NONE               = Symbol('ACTION_TYPE_NONE');\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Actions.js","export const ENTER       = 'enter';\nexport const BACKSPACE   = 'backspace';\nexport const DELETE      = 'delete';\nexport const ARROW_UP    = 'arrowup';\nexport const ARROW_DOWN  = 'arrowdown';\nexport const ARROW_LEFT  = 'arrowleft';\nexport const ARROW_RIGHT = 'arrowright';\n\nexport const A = 'a';\nexport const C = 'c';\nexport const V = 'v';\nexport const S = 's';\nexport const Z = 'z';\nexport const B = 'b';\nexport const I = 'i';\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Keys.js","import Node from './models/Node';\n\nclass TreeBuilder {\n    /**\n     * @param   {Node}            root\n     * @param   {string}          text\n     * @param   {Array.<Markup>}  markups\n     * @return  {void}\n     */\n\n    static buildTreeFromRoot(root, text, markups) {\n        const openNodes = [];\n\n        let isAtLeaf = false;\n        let node = root;\n\n        node.start = 0;\n        node.end = text.length;\n\n        for (let i = 0; i <= text.length; i++) {\n            let requiresNewLeaf = false;\n\n            for (let j = 0, markup; (markup = markups[j]); j++) {\n                let closedNode = null;\n\n                if (markup[2] !== i || markup[1] === markup[2]) continue;\n\n                if (isAtLeaf && openNodes[openNodes.length - 1].isText) {\n                    const textNode = openNodes.pop();\n\n                    TreeBuilder.closeNode(textNode, i, text);\n\n                    isAtLeaf = false;\n                }\n\n                requiresNewLeaf = true;\n\n                closedNode = openNodes.pop();\n\n                TreeBuilder.closeNode(closedNode, i);\n\n                node = closedNode.parent;\n            }\n\n            for (let j = 0, markup; (markup = markups[j]); j++) {\n                let newNode = null;\n\n                if (markup[1] !== i) continue;\n\n                if (isAtLeaf) {\n                    const textNode = openNodes.pop();\n\n                    TreeBuilder.closeNode(textNode, i, text);\n\n                    isAtLeaf = false;\n                }\n\n                newNode = TreeBuilder.getOpenNode(markup[0], i, node);\n\n                openNodes.push(newNode);\n\n                node.childNodes.push(newNode);\n\n                node = newNode;\n\n                requiresNewLeaf = true;\n\n                if (markup[1] === markup[2]) {\n                    // Empty tag, close immediately\n\n                    TreeBuilder.closeNode(node, i);\n                }\n            }\n\n            if (requiresNewLeaf) {\n                const leaf = TreeBuilder.getOpenNode('', i, node);\n\n                if (node.start === node.end) {\n                    // Empty leaf in empty node, close immediately\n\n                    node.childNodes.push(leaf);\n\n                    TreeBuilder.closeNode(leaf, i);\n\n                    node = node.parent;\n\n                    openNodes.pop();\n                } else if (i < text.length) {\n                    // Should open leaf node, but not at end of string\n\n                    node.childNodes.push(leaf);\n\n                    openNodes.push(leaf);\n\n                    isAtLeaf = true;\n                }\n\n                requiresNewLeaf = false;\n            }\n        }\n    }\n\n    /**\n     * @param   {string}    tag\n     * @param   {number}    i\n     * @param   {Node}      parent\n     * @return  {Node}\n     */\n\n    static getOpenNode(tag, start, parent) {\n        const node = new Node();\n\n        node.tag    = tag;\n        node.parent = parent;\n        node.start  = start;\n        node.path   = parent.path.slice();\n\n        node.path.push(parent.childNodes.length);\n\n        return node;\n    }\n\n    /**\n     * @param   {Node}      node\n     * @param   {number}    end\n     * @param   {string}    [text='']\n     * @return  {void}\n     */\n\n    static closeNode(node, end, text='') {\n        node.end = end;\n\n        if (node.isText) {\n            node.text = text.slice(node.start, node.end);\n        }\n    }\n}\n\nexport default TreeBuilder;\n\n\n// WEBPACK FOOTER //\n// ./src/TreeBuilder.js","class Renderer {\n    static renderNodes(nodes, parent=null) {\n        return nodes.map(node => Renderer.renderNode(node, parent)).join('');\n    }\n\n    static renderNode(node, parent) {\n        let html = '';\n\n        if (node.tag) {\n            html += '<' + node.tag + '>';\n        }\n\n        if (node.childNodes.length) {\n            html += Renderer.renderNodes(node.childNodes, node);\n        } else {\n            // Text leaf node\n\n            html += node.text.length ? node.text : '&#8203;';\n        }\n\n        if (parent && parent.childNodes[parent.childNodes.length - 1] === node && html.match(/ $/)) {\n            html += '&#8203;';\n        }\n\n        if (node.tag) {\n            html += '</' + node.tag + '>';\n        }\n\n        return html;\n    }\n}\n\nexport default Renderer;\n\n\n// WEBPACK FOOTER //\n// ./src/Renderer.js","import State        from '../models/State';\nimport Util         from '../Util';\nimport * as Actions from '../constants/Actions';\nimport {STRONG}     from '../constants/Markups';\nimport Editor       from '../Editor';\n\nexport default (prevState, action) => {\n    switch (action.type) {\n        case Actions.SET_SELECTION: {\n            const nextState = Util.extend(new State(), prevState, true);\n\n            Object.assign(nextState.selection, action.range);\n\n            Editor.setActiveMarkups(nextState, action.range);\n\n            return nextState;\n        }\n        case Actions.INSERT: {\n            return Editor.insert(prevState, {from: action.range.from, to: action.range.to}, action.content);\n        }\n        case Actions.BACKSPACE: {\n            const fromIndex = action.range.isCollapsed ? action.range.from - 1 : action.range.from;\n\n            // If at start, ignore\n\n            if (action.range.to === 0) return prevState;\n\n            return Editor.insert(prevState, {from: fromIndex, to: action.range.to}, '');\n        }\n        case Actions.DELETE: {\n            const toIndex = action.range.isCollapsed ? action.range.from + 1 :  action.range.to;\n\n            // If at end, ignore\n\n            if (action.range.from === prevState.text.length) return prevState;\n\n            return Editor.insert(prevState, {from: action.range.from, to: toIndex}, '');\n        }\n        case Actions.RETURN:\n            return Editor.insert(prevState, action.range, '\\n');\n        case Actions.SHIFT_RETURN:\n\n            break;\n        case Actions.TOGGLE_BOLD: {\n            let nextState = null;\n\n            // TODO: if collapsed, simply change state to disable/enable active markup\n\n            if (prevState.isTagActive(STRONG)) {\n                nextState = Editor.removeInlineMarkup(prevState, STRONG, action.range.from, action.range.to);\n            } else {\n                nextState = Editor.addInlineMarkup(prevState, STRONG, action.range.from, action.range.to);\n            }\n\n            Editor.setActiveMarkups(nextState, action.range);\n\n            console.log(nextState);\n\n            return nextState;\n        }\n        default:\n            return prevState;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/actions/reducer.js","import State    from './models/State';\nimport Markup   from './models/Markup';\nimport Util     from './Util';\n\n/**\n * A static class of utility functions for performing edits to\n * the editor state.\n */\n\nclass Editor {\n    static insert(prevState, range, content) {\n        const nextState = new State();\n\n        const totalDeleted = range.to - range.from;\n\n        let totalAdded = content.length;\n        let adjustment = totalAdded - totalDeleted;\n        let collapsed = '';\n        let totalCollapsed = 0;\n\n        nextState.text =\n            prevState.text.slice(0, range.from) +\n            content +\n            prevState.text.slice(range.to);\n\n        collapsed = Editor.collapseWhitespace(nextState.text);\n\n        if ((totalCollapsed = nextState.text.length - collapsed.length) > 0) {\n            totalAdded -= totalCollapsed;\n            adjustment -= totalCollapsed;\n\n            nextState.text = collapsed;\n        }\n\n        nextState.markups = Editor.adjustMarkups(\n            prevState.markups,\n            range.from,\n            range.to,\n            totalAdded,\n            adjustment\n        );\n\n        if (content === '\\n') {\n            nextState.markups = Editor.splitMarkups(nextState.markups, range.from);\n        } else if (content === '') {\n            nextState.markups = Editor.joinMarkups(nextState.markups, range.from);\n        }\n\n        nextState.selection.from =\n        nextState.selection.to   = range.from + totalAdded;\n\n        Editor.setActiveMarkups(nextState, nextState.selection);\n\n        return nextState;\n    }\n\n    static collapseWhitespace(text) {\n        // Replace 3 or more spaces with a single space.\n\n        let collapsed = text.replace(/ {3,}/g, ' ');\n\n        // Replace 1 or more spaces before a new line with a single space\n\n        collapsed = text.replace(/ +\\n/g, ' \\n');\n\n        // Disallow spaces at the start of a new line\n\n        collapsed = text.replace(/\\n */g, '\\n');\n\n        return collapsed;\n    }\n\n    static addInlineMarkup(prevState, tag, from, to) {\n        const nextState = Util.extend(new State(), prevState, true);\n\n        let insertIndex = -1;\n\n        if (prevState.envelopedBlockMarkups.length > 1) {\n            let formattedState = nextState;\n\n            // Split and delegate the command\n\n            formattedState.envelopedBlockMarkups.length = 0;\n\n            prevState.envelopedBlockMarkups.forEach((markup, i) => {\n                const formatFrom = i === 0 ? from : markup.start;\n                const formatTo   = i === prevState.envelopedBlockMarkups.length - 1 ? to : markup.end;\n\n                formattedState = Editor.addInlineMarkup(formattedState, tag, formatFrom, formatTo);\n            });\n\n            return formattedState;\n        }\n\n        Editor.ingestMarkups(nextState.markups, tag, from, to);\n\n        for (let i = 0, markup; (markup = nextState.markups[i]); i++) {\n            // NB: When inserting an inline markup there should always be at\n            // least one block markup in the array\n\n            insertIndex = i + 1;\n\n            if (markup.start > from) {\n                break;\n            }\n        }\n\n        nextState.markups.splice(insertIndex, 0, [tag, from, to]);\n\n        Editor.joinMarkups(nextState.markups, from);\n        Editor.joinMarkups(nextState.markups, to);\n\n        return nextState;\n    }\n\n    static removeInlineMarkup(prevState, tag, from, to) {\n        const nextState = Util.extend(new State(), prevState, true);\n        // for each block markup in range, split command to target each\n        // one individually if no markup exists either around or at range, abort\n        // if at range, remove it\n        // if greater than range, split the markup\n\n        console.log('remove', tag, 'at', from, to);\n\n        Editor.joinMarkups(nextState.markups, from);\n        Editor.joinMarkups(nextState.markups, to);\n\n        return nextState;\n    }\n\n    static replaceBlockMarkup() {\n\n    }\n\n    static adjustMarkups(markups, fromIndex, toIndex, totalAdded, adjustment) {\n        const newMarkups = [];\n\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [tag, markupStart, markupEnd] = markup;\n            const newMarkup = new Markup(markup);\n\n            let removeMarkup = false;\n\n            if (!(markup instanceof Markup)) {\n                markup = new Markup(markup);\n            }\n\n            if (markupStart >= fromIndex && markupEnd <= toIndex) {\n                // Selection completely envelopes markup\n\n                if (markupStart === fromIndex && (markup.isBlock || markup.isInline && totalAdded > 0)) {\n                    // Markup should be preserved is a) is block element,\n                    // b) is inline and inserting\n                    newMarkup[2] = markupStart + totalAdded;\n                } else if (!markup.isBlock) {\n                    removeMarkup = true;\n                }\n            } else if (markupStart <= fromIndex && markupEnd >= toIndex) {\n                // Selection within markup or equal to markup\n\n                newMarkup[2] += adjustment;\n\n                if (markup.isInline && (markupStart === fromIndex && fromIndex === toIndex)) {\n                    // Collapsed caret at start of inline markup\n\n                    newMarkup[1] += adjustment;\n                }\n            } else if (markupStart >= toIndex) {\n                // Markup starts after Selection\n\n                newMarkup[1] += adjustment;\n                newMarkup[2] += adjustment;\n            } else if (fromIndex < markupStart && toIndex > markupStart && toIndex < markupEnd) {\n                // Selection partially envelopes markup from start\n\n                if (markup.isInline) {\n                    newMarkup[1] += (adjustment + (toIndex - markupStart));\n                    newMarkup[2] += adjustment;\n                } else {\n                    // Previous block markup will consume this one, remove\n\n                    removeMarkup = true;\n                }\n            } else if (fromIndex > markupStart && fromIndex < markupEnd && toIndex > markupEnd) {\n                // Selection partially envelopes markup from end\n\n                if (markup.isInline) {\n                    // Extend inline markup to end of insertion\n\n                    newMarkup[2] = fromIndex + totalAdded;\n                } else {\n                    const nextBlockMarkup = Editor.getNextBlockMarkup(markups, i);\n\n                    // Extend block markup to end of next block +/- adjustment\n\n                    newMarkup[2] = nextBlockMarkup[2] + adjustment;\n                }\n            }\n\n            if (!removeMarkup) {\n                newMarkups.push(newMarkup);\n            }\n        }\n\n        return newMarkups;\n    }\n\n    static getNextBlockMarkup(markups, index) {\n        for (let i = index + 1, markup; (markup = markups[i]); i++) {\n            if (!(markup instanceof Markup)) {\n                markup = new Markup(markup);\n            }\n\n            if (markup.isBlock) {\n                return markup;\n            }\n        }\n\n        return null;\n    }\n\n    static splitMarkups(markups, index) {\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [markupTag, markupStart, markupEnd] = markup;\n\n            let newMarkup = null;\n\n            if (markupStart <= index && markupEnd >= index) {\n                const newTag = markup.isBlock && markupEnd === index + 1 ? 'p' : markupTag;\n\n                markup[2] = index;\n\n                newMarkup = new Markup([newTag, index + 1, markupEnd]);\n\n                markups.splice(i + 1, 0, newMarkup);\n\n                i++;\n            }\n        }\n\n        return markups;\n    }\n\n    static joinMarkups(markups, index) {\n        const closingInlines = {};\n\n        let closingBlock = null;\n\n        for (let i = 0; i < markups.length; i++) {\n            const markup = new Markup(markups[i]);\n\n            if (markup.end === index) {\n                if (markup.isBlock) {\n                    closingBlock = markup;\n                } else {\n                    closingInlines[markup.tag] = markups[i];\n                }\n            } else if (markup.start === index) {\n                let extend = null;\n\n                if (markup.isBlock && closingBlock) {\n                    extend = closingBlock;\n                } else if (markup.isInline && closingInlines[markup.tag]) {\n                    extend = closingInlines[markup.tag];\n                }\n\n                if (extend) {\n                    extend[2] = markup[2];\n\n                    markups.splice(i, 1);\n\n                    i--;\n                }\n            }\n        }\n\n        return markups;\n    }\n\n    /**\n     * Removes or shortens any markups matching the provided tag within the\n     * provided range.\n     *\n     * @static\n     * @param {Array.<Markup>} markups\n     * @param {string}         tag\n     * @param {number}         from\n     * @param {number}         to\n     */\n\n    static ingestMarkups(markups, tag, from, to) {\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [markupTag, markupStart, markupEnd] = markup;\n\n            if (markupTag !== tag) continue;\n\n            if (markupStart >= from && markupEnd <= to) {\n                // Markup enveloped, remove\n\n                markups.splice(i, 1);\n\n                i--;\n            } else if (markupStart < from && markupEnd > to) {\n                // Markup overlaps start, shorten by moving end to\n                // start of selection\n\n                markup[2] = from;\n            } else if (markupStart > from && markupStart < to) {\n                // Markup overlaps end, shorten by moving start to\n                // end of selection\n\n                markup[1] = to;\n            }\n        }\n    }\n\n    /**\n     * Determines which block and inline markups should be \"active\"\n     * or \"enveloped\" for particular selection.\n     *\n     * @static\n     * @param  {State} state\n     * @param  {Range} range\n     * @return {void}\n     */\n\n    static setActiveMarkups(state, range) {\n        state.activeBlockMarkup = null;\n\n        state.activeInlineMarkups.length    =\n        state.envelopedBlockMarkups.length  = 0;\n\n        for (let i = 0; i < state.markups.length; i++) {\n            const markup = new Markup(state.markups[i]);\n\n            // Active markups are those that surround the start of the\n            // selection and should be highlighted in any UI\n\n            if (markup.start <= range.from && markup.end >= range.from) {\n                if (markup.isBlock) {\n                    // Only one block markup may be active at a time\n\n                    state.activeBlockMarkup = markup;\n                } else if (markup.end >= range.to) {\n                    state.activeInlineMarkups.push(markup);\n                }\n            }\n\n            if (!markup.isBlock) continue;\n\n            // Enveloped block markups are those that are partially or completely\n            // enveloped by the selection.\n\n            if (\n                (markup.start <= range.from && markup.end >= range.from) ||\n                (markup.start <= range.to && markup.end >= range.from)\n            ) {\n                state.envelopedBlockMarkups.push(markup);\n            }\n        }\n    }\n}\n\nexport default Editor;\n\n\n// WEBPACK FOOTER //\n// ./src/Editor.js","module.exports = {\"text\":\"Lorem ipsum dolor sit amet.\\nConsectetur adipiscing\",\"markups\":[[\"p\",0,27],[\"em\",6,17],[\"strong\",12,17],[\"h2\",28,50]]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./tests/data.json\n// module id = 18\n// module chunks = 0","export const H1 = 'h1';\nexport const H2 = 'h2';\nexport const H3 = 'h3';\nexport const H4 = 'h4';\nexport const H5 = 'h5';\nexport const H6 = 'h6';\nexport const P  = 'p';\n\nexport const STRONG = 'strong';\nexport const EM     = 'em';\nexport const BR     = 'br';\n\nexport const MARKUP_TYPE_INLINE = Symbol('MARKUP_TYPE_INLINE');\nexport const MARKUP_TYPE_BLOCK  = Symbol('MARKUP_TYPE_BLOCK');\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Markups.js"],"sourceRoot":""}