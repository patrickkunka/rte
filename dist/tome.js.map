{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ce4dd318e852ec38a19c","webpack:///./src/constants/MarkupTag.ts","webpack:///./src/Util.ts","webpack:///./src/models/State.ts","webpack:///./src/models/Markup.ts","webpack:///./src/constants/ActionType.ts","webpack:///./src/models/TomeNode.ts","webpack:///./src/models/TomeSelection.ts","webpack:///./src/constants/SelectionDirection.ts","webpack:///./src/factory.ts","webpack:///./src/Tome.ts","webpack:///./src/Dom.ts","webpack:///./src/constants/MarkupType.ts","webpack:///./src/models/Caret.ts","webpack:///./src/models/Action.ts","webpack:///./src/config/ConfigRoot.ts","webpack:///./src/config/ConfigCallbacks.ts","webpack:///./src/EventHandler.ts","webpack:///./src/constants/Keypress.ts","webpack:///./src/TreeBuilder.ts","webpack:///./src/Renderer.ts","webpack:///./src/reducer.ts","webpack:///./src/Editor.ts"],"names":[],"mappings":"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","file":"tome.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tome\"] = factory();\n\telse\n\t\troot[\"tome\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ce4dd318e852ec38a19c","enum MarkupTag {\n    H1          = 'h1',\n    H2          = 'h2',\n    H3          = 'h3',\n    H4          = 'h4',\n    H5          = 'h5',\n    H6          = 'h6',\n    P           = 'p',\n    TEXT        = '#text',\n    BLOCK_BREAK = '\\n\\n',\n    LINE_BREAK  = '\\n',\n    STRONG      = 'strong',\n    EM          = 'em',\n    BR          = 'br'\n}\n\nexport default MarkupTag;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/MarkupTag.ts","class Util {\n    static extend(target: any, source: any, deep: boolean=false): any {\n        let sourceKeys: Array<string|number>=[];\n\n        if (!target || typeof target !== 'object') {\n            throw new TypeError('[Util#extend] Target must be a valid object');\n        }\n\n        if (Array.isArray(source)) {\n            for (let i = 0; i < source.length; i++) {\n                sourceKeys.push(i);\n            }\n        } else if (source) {\n            sourceKeys = Object.keys(source);\n        }\n\n        for (let i = 0; i < sourceKeys.length; i++) {\n            const key = sourceKeys[i];\n            const descriptor = Object.getOwnPropertyDescriptor(source, key);\n\n            // Skip computed properties\n\n            if (typeof descriptor.get === 'function') continue;\n\n            if (!deep || typeof source[key] !== 'object') {\n                // All non-object primitives, or all properties if\n                // shallow extend\n\n                target[key] = source[key];\n            } else if (Array.isArray(source[key])) {\n                // Arrays\n\n                if (!target[key]) {\n                    target[key] = [];\n                }\n\n                this.extend(target[key], source[key], deep);\n            } else {\n                // Objects\n\n                if (!target[key]) {\n                    target[key] = {};\n                }\n\n                this.extend(target[key], source[key], deep);\n            }\n        }\n\n        return target;\n    }\n\n    static camelCase(str: string): string {\n        return str.toLowerCase()\n            .replace(/([_-][a-z0-9])/g, $1 => $1.toUpperCase().replace(/[_-]/, ''));\n    }\n\n    static pascalCase(str: string): string {\n        return (str = Util.camelCase(str))\n            .charAt(0)\n            .toUpperCase() + str.slice(1);\n    }\n\n    /**\n     * Compares two arrays of indices, returning `true` if `pathOne` points\n     * to a node at a greater position in the tree.\n     */\n\n    static isGreaterPath(pathOne: Array<number>, pathTwo: Array<number>): boolean {\n        let index    = 0;\n        let valueOne = pathOne[index];\n        let valueTwo = pathTwo[index];\n\n        while (typeof valueOne === 'number' && typeof valueTwo === 'number') {\n            if (valueOne > valueTwo) {\n                return true;\n            }\n\n            index++;\n\n            valueOne = pathOne[index];\n            valueTwo = pathTwo[index];\n        }\n\n        return false;\n    }\n\n    static index(node: Node, includeNonElements: boolean=false): number {\n        const previousSiblingType = includeNonElements ? 'previousSibling' : 'previousElementSibling';\n\n        let index = 0;\n\n        while ((node = node[previousSiblingType]) !== null) {\n            index++;\n        }\n\n        return index;\n    }\n}\n\nexport default Util;\n\n\n// WEBPACK FOOTER //\n// ./src/Util.ts","import TomeSelection from './TomeSelection';\nimport Markup        from './Markup';\nimport MarkupTag     from '../constants/MarkupTag';\n\nclass State {\n    text:                  string        = '';\n    markups:               Array<Markup> = [];\n    selection:             TomeSelection = new TomeSelection();\n    activeBlockMarkup:     Markup        = null\n    activeInlineMarkups:   Array<Markup> = [];\n    envelopedBlockMarkups: Array<Markup> = [];\n\n    constructor() {\n        Object.seal(this);\n    }\n\n    get length() {\n        return this.text.length;\n    }\n\n    isTagActive(tag: MarkupTag) {\n        for (let i = 0, markup: Markup; (markup = this.activeInlineMarkups[i]); i++) {\n            if (markup[0] === tag) return true;\n        }\n\n        return false;\n    }\n}\n\nexport default State;\n\n\n// WEBPACK FOOTER //\n// ./src/models/State.ts","import MarkupTag from '../constants/MarkupTag';\nimport MarkupType from '../constants/MarkupType';\nimport IMarkup from '../interfaces/IMarkup';\n\nclass Markup {\n    0:MarkupTag=null;\n    1:number=null;\n    2:number=null;\n\n    constructor([tag, start, end]: IMarkup) {\n        this[0] = tag;\n        this[1] = start;\n        this[2] = end;\n\n        Object.seal(this);\n    }\n\n    get tag() {\n        return this[0];\n    }\n\n    get start() {\n        return this[1];\n    }\n\n    get end() {\n        return this[2]\n    }\n\n    get type() {\n        return [\n            MarkupTag.H1,\n            MarkupTag.H2,\n            MarkupTag.H3,\n            MarkupTag.H4,\n            MarkupTag.H5,\n            MarkupTag.H6,\n            MarkupTag.P\n        ].indexOf(this[0]) > -1 ? MarkupType.BLOCK : MarkupType.INLINE;\n    }\n\n    get isBlock() {\n        return this.type === MarkupType.BLOCK;\n    }\n\n    get isInline() {\n        return this.type === MarkupType.INLINE;\n    }\n\n    toArray(): IMarkup {\n        return [this[0], this[1], this[2]];\n    }\n}\n\nexport default Markup;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Markup.ts","enum ActionType {\n    SET_SELECTION   = 'SET_SELECTION',\n    INSERT          = 'INSERT',\n    BACKSPACE       = 'BACKSPACE',\n    DELETE          = 'DELETE',\n    RETURN          = 'RETURN',\n    SHIFT_RETURN    = 'SHIFT_RETURN',\n    TOGGLE_INLINE   = 'TOGGLE_INLINE',\n    UNDO            = 'UNDO',\n    REDO            = 'REDO',\n    NONE            = 'NONE'\n};\n\nexport default ActionType;\n\n\n// WEBPACK FOOTER //\n// ./src/constants/ActionType.ts","import MarkupTag from '../constants/MarkupTag';\n\nclass TomeNode {\n    childNodes: Array<TomeNode> = [];\n    parent:     TomeNode        = null;\n    start:      number          = -1;\n    end:        number          = -1;\n    tag:        MarkupTag       = null;\n    text:       string          = '';\n    path:       Array<number>   = [];\n\n    get isText() {\n        return this.tag === MarkupTag.TEXT;\n    }\n\n    get isBlock() {\n        return [\n            MarkupTag.H1,\n            MarkupTag.H2,\n            MarkupTag.H3,\n            MarkupTag.H4,\n            MarkupTag.H5,\n            MarkupTag.H6,\n            MarkupTag.P\n        ].indexOf(this.tag) > -1;\n    }\n\n    get isInline() {\n        return !this.isText && !this.isBlock;\n    }\n}\n\nexport default TomeNode;\n\n\n// WEBPACK FOOTER //\n// ./src/models/TomeNode.ts","import SelectionDirection from '../constants/SelectionDirection';\nimport ISelection         from '../interfaces/ISelection';\n\nclass TomeSelection implements ISelection {\n    from: number;\n    to:   number;\n    direction: SelectionDirection;\n\n    constructor(from: number=-1, to: number=-1, direction: SelectionDirection=SelectionDirection.LTR) {\n        this.from       = from;\n        this.to         = to;\n        this.direction  = direction;\n    }\n\n    get isCollapsed() {\n        return this.from === this.to;\n    }\n\n    get isLtr() {\n        return this.direction === SelectionDirection.LTR;\n    }\n\n    get isRtl() {\n        return this.direction === SelectionDirection.RTL;\n    }\n\n    get anchor() {\n        if (this.isLtr) {\n            return this.from;\n        }\n\n        return this.to;\n    }\n\n    get extent() {\n        if (this.isLtr) {\n            return this.to;\n        }\n\n        return this.from;\n    }\n}\n\nexport default TomeSelection;\n\n\n// WEBPACK FOOTER //\n// ./src/models/TomeSelection.ts","enum SelectionDirection {\n    LTR='LTR',\n    RTL='RTL'\n}\n\nexport default SelectionDirection;\n\n\n// WEBPACK FOOTER //\n// ./src/constants/SelectionDirection.ts","import Tome from './Tome';\n\nfunction factory(el: HTMLElement, config: any={}): Tome {\n    const tome = new Tome(el, config);\n\n    return tome;\n}\n\nmodule.exports = factory;\n\n\n// WEBPACK FOOTER //\n// ./src/factory.ts","import Dom                from './Dom';\nimport Util               from './Util';\nimport Markup             from './models/Markup';\nimport TomeNode           from './models/TomeNode';\nimport Caret              from './models/Caret';\nimport TomeSelection      from './models/TomeSelection';\nimport State              from './models/State';\nimport Action             from './models/Action';\nimport IAction            from './interfaces/IAction';\nimport ISelection         from './interfaces/ISelection';\nimport ConfigRoot         from './config/ConfigRoot';\nimport EventHandler       from './EventHandler';\nimport TreeBuilder        from './TreeBuilder';\nimport Renderer           from './Renderer';\nimport reducer            from './reducer';\nimport ActionType         from './constants/ActionType';\nimport MarkupTag          from './constants/MarkupTag';\nimport SelectionDirection from './constants/SelectionDirection';\nimport INodeLike          from './interfaces/INodeLike';\nimport ITome              from './interfaces/ITome';\n\nclass Tome implements ITome {\n    dom:          Dom          = new Dom();\n    eventHandler: EventHandler = new EventHandler(this);\n    config:       ConfigRoot   = new ConfigRoot();\n    root:         TomeNode     = null;\n    history:      Array<State> = [];\n    historyIndex: number       = -1;\n\n    constructor(el: HTMLElement, config: any) {\n        this.init(el, config);\n    }\n\n    get state() {\n        return this.history[this.historyIndex];\n    }\n\n    init(el: HTMLElement, config: any): void {\n        Util.extend(this.config, config, true);\n\n        if (!el.contentEditable) {\n            el.contentEditable = true.toString();\n        }\n\n        this.dom.root = el;\n\n        this.history.push(this.buildInitialState(this.config.value));\n\n        this.historyIndex++;\n\n        this.render();\n\n        this.eventHandler.bindEvents(this.dom.root);\n    }\n\n    buildInitialState(initialState: any): State {\n        const state: State = Util.extend(new State(), initialState);\n\n        if (state.markups.length < 1) {\n            state.markups.push(new Markup([MarkupTag.P, 0, 0]));\n        }\n\n        // TODO: if text but no markups, wrap entire in <p>\n\n        // Coerce triplets into `Markup` if needed\n\n        state.markups = state.markups.map(markup => Array.isArray(markup) ? new Markup(markup) : markup);\n\n        return state;\n    }\n\n    render(): void {\n        this.root = Tome.buildModelFromState(this.state);\n\n        this.dom.root.innerHTML = Renderer.renderNodes(this.root.childNodes);\n    }\n\n    undo(): void {\n        if (this.historyIndex === 1) return;\n\n        const fn = this.config.callbacks.onStateChange;\n\n        this.historyIndex--;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n\n        if (typeof fn === 'function') {\n            fn(this.state, ActionType.UNDO);\n        }\n    }\n\n    redo(): void {\n        if (this.history.length - 1 === this.historyIndex) return;\n\n        const fn = this.config.callbacks.onStateChange;\n\n        this.historyIndex++;\n\n        this.render();\n\n        this.positionCaret(this.state.selection);\n\n        if (typeof fn === 'function') {\n            fn(this.state, ActionType.REDO);\n        }\n    }\n\n    applyAction(actionRaw: IAction): void {\n        const action: Action = Object.assign(new Action(), actionRaw);\n        const fn = this.config.callbacks.onStateChange;\n\n        if (action.type === ActionType.SET_SELECTION) {\n            // Detect new selection from browser API\n\n            const selection = window.getSelection();\n\n            if (!selection.anchorNode || !this.dom.root.contains(selection.anchorNode)) return;\n\n            action.range = this.getRangeFromSelection(selection);\n        } else {\n            // Use previous range\n\n            action.range = this.state.selection;\n        }\n\n        const nextState = [action].reduce(reducer, this.state);\n\n        if (!(nextState instanceof State)) {\n            throw new TypeError(`[Tome] Action type \"${action.type.toString()}\" did not return a valid state object`);\n        }\n\n        if (nextState === this.state) return;\n\n        Object.freeze(nextState);\n        Object.freeze(nextState.markups);\n        Object.freeze(nextState.activeInlineMarkups);\n        Object.freeze(nextState.envelopedBlockMarkups);\n\n        // TODO: discern between 'push' vs 'replace' commands i.e. inserting a\n        // char vs moving a cursor\n\n        // Chop off any divergent future state\n\n        this.history.length = this.historyIndex + 1;\n\n        // Push in new state\n\n        this.history.push(nextState);\n\n        this.historyIndex++;\n\n        if (action.type !== ActionType.SET_SELECTION) {\n            this.render();\n\n            this.positionCaret(this.state.selection);\n        }\n\n        if (typeof fn === 'function') {\n            fn(this.state, action.type);\n        }\n    }\n\n    getPathFromDomNode(domNode: Node): Array<number> {\n        const path = [];\n\n        while (domNode) {\n            if (domNode instanceof HTMLElement && domNode === this.dom.root) break;\n\n            path.unshift(Util.index(domNode, true));\n\n            domNode = domNode.parentElement;\n        }\n\n        return path;\n    }\n\n    getNodeByPath<T extends INodeLike>(path: Array<number>, root: T): T {\n        let node: T = root;\n        let index = -1;\n        let i = 0;\n\n        while (typeof (index = path[i]) === 'number') {\n            node = node.childNodes[index];\n\n            i++;\n        }\n\n        return node || null;\n    }\n\n    /**\n     * @param   {Selection} selection\n     * @return  {TomeSelection;}\n     */\n\n    getRangeFromSelection(selection: Selection) {\n        const anchorPath = this.getPathFromDomNode(selection.anchorNode);\n        const virtualAnchorNode = this.getNodeByPath(anchorPath, this.root);\n        const from = new Caret();\n        const to = new Caret();\n\n        let extentPath = anchorPath;\n        let virtualExtentNode: TomeNode = virtualAnchorNode;\n        let isRtl = false;\n        let rangeFrom = -1;\n        let rangeTo = -1;\n\n        if (!selection.isCollapsed) {\n            extentPath = this.getPathFromDomNode(selection.extentNode);\n            virtualExtentNode = this.getNodeByPath(extentPath, this.root);\n        }\n\n        // If the anchor is greater than the extent, or both paths are equal\n        // but the anchor offset is greater than the extent offset, the range\n        // should be considered \"RTL\"\n\n        isRtl =\n            Util.isGreaterPath(anchorPath, extentPath) ||\n            (!Util.isGreaterPath(extentPath, anchorPath) && selection.anchorOffset > selection.extentOffset);\n\n        from.node   = to.node = isRtl ? virtualExtentNode : virtualAnchorNode;\n        from.offset = to.offset = isRtl ? selection.extentOffset : selection.anchorOffset;\n        from.path   = to.path = isRtl ? extentPath : anchorPath;\n\n        if (!selection.isCollapsed) {\n            to.node     = isRtl ? virtualAnchorNode : virtualExtentNode;\n            to.offset   = isRtl ? selection.anchorOffset : selection.extentOffset;\n            to.path     = isRtl ? anchorPath : extentPath;\n        }\n\n        rangeFrom = Math.min(from.node.start + from.offset, from.node.end);\n        rangeTo = Math.min(to.node.start + to.offset, to.node.end);\n\n        return new TomeSelection(rangeFrom, rangeTo, isRtl ? SelectionDirection.RTL : SelectionDirection.LTR);\n    }\n\n    positionCaret({from, to, direction}: ISelection): void {\n        const range = document.createRange();\n        const selection = window.getSelection();\n\n        let childNodes:  Array<TomeNode> = this.root.childNodes;\n        let virtualNode: TomeNode;\n        let nodeLeft:    Node;\n        let nodeRight:   Node;\n        let offsetStart: number;\n        let offsetEnd:   number;\n\n        for (let i = 0; (virtualNode = childNodes[i]); i++) {\n            // Node ends before caret\n\n            if (virtualNode.end < from) continue;\n\n            // The desired node is this node, or within this node\n\n            if (virtualNode.childNodes.length) {\n                // Node has children, drop down until at leaf\n\n                childNodes = virtualNode.childNodes;\n\n                i = -1;\n\n                continue;\n            }\n\n            // At leaf\n\n            offsetStart = from - virtualNode.start;\n\n            break;\n        }\n\n        nodeLeft = this.getNodeByPath(virtualNode.path, this.dom.root);\n\n        range.setStart(nodeLeft, offsetStart);\n\n        if (from === to) {\n            // Single caret\n\n            range.collapse(true);\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            return;\n        }\n\n        // Multi-character selection, reset child nodes\n\n        childNodes = this.root.childNodes;\n\n        for (let i = 0; (virtualNode = childNodes[i]); i++) {\n            if (virtualNode.end < to) continue;\n\n            if (virtualNode.childNodes.length) {\n                childNodes = virtualNode.childNodes;\n\n                i = -1;\n\n                continue;\n            }\n\n            offsetEnd = to - virtualNode.start;\n\n            break;\n        }\n\n        nodeRight = this.getNodeByPath(virtualNode.path, this.dom.root);\n\n        range.setEnd(nodeRight, offsetEnd);\n\n        selection.removeAllRanges();\n\n        if (direction === SelectionDirection.LTR) {\n            selection.setBaseAndExtent(nodeRight, offsetEnd, nodeLeft, offsetStart);\n        } else {\n            selection.setBaseAndExtent(nodeLeft, offsetStart, nodeRight, offsetEnd);\n        }\n    }\n\n    static buildModelFromState(state: State): TomeNode {\n        const root = new TomeNode();\n\n        TreeBuilder.build(root, state.text, state.markups);\n\n        return root;\n    }\n}\n\nexport default Tome;\n\n\n// WEBPACK FOOTER //\n// ./src/Tome.ts","class Dom {\n    root: HTMLElement=null;\n}\n\nexport default Dom;\n\n\n// WEBPACK FOOTER //\n// ./src/Dom.ts","enum MarkupType {\n    INLINE,\n    BLOCK\n}\n\nexport default MarkupType;\n\n\n// WEBPACK FOOTER //\n// ./src/constants/MarkupType.ts","import TomeNode from './TomeNode';\n\nclass Caret {\n    path:   Array<number> = null;\n    node:   TomeNode      = null;\n    offset: number        = null;\n}\n\nexport default Caret;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Caret.ts","import ActionType    from '../constants/ActionType';\nimport MarkupTag     from '../constants/MarkupTag';\nimport IAction       from '../interfaces/IAction';\nimport TomeSelection from './TomeSelection';\n\nclass Action implements IAction {\n    type:    ActionType    = null;\n    range:   TomeSelection = null;\n    tag:     MarkupTag     = null;\n    content: string        = '';\n}\n\nexport default Action;\n\n\n// WEBPACK FOOTER //\n// ./src/models/Action.ts","import ConfigCallbacks from './ConfigCallbacks';\nimport State           from '../models/State';\n\nclass ConfigRoot {\n    callbacks: ConfigCallbacks=new ConfigCallbacks();\n    value: State=new State();\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default ConfigRoot;\n\n\n// WEBPACK FOOTER //\n// ./src/config/ConfigRoot.ts","class ConfigCallbacks {\n    onStateChange: Function=null;\n    onValueChange: Function=null;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\nexport default ConfigCallbacks;\n\n\n// WEBPACK FOOTER //\n// ./src/config/ConfigCallbacks.ts","import Util         from './Util';\nimport IAction      from './interfaces/IAction';\nimport ITome        from './interfaces/ITome';\nimport ActionType   from './constants/ActionType';\nimport Keypress     from './constants/Keypress';\nimport MarkupTag    from './constants/MarkupTag';\n\nconst SELECTION_DELAY = 10;\n\nclass EventHandler {\n    tome: ITome=null;\n    boundDelegator: EventListenerObject=null;\n\n    constructor(tome: ITome) {\n        this.tome = tome;\n        this.boundDelegator = this.delegator.bind(this);\n    }\n\n    bindEvents(root: HTMLElement): void {\n        root.addEventListener('keypress', this.boundDelegator);\n        root.addEventListener('keydown', this.boundDelegator);\n        root.addEventListener('mousedown', this.boundDelegator);\n        window.addEventListener('mouseup', this.boundDelegator);\n    }\n\n    unbindEvents(root: HTMLElement): void {\n        root.removeEventListener('keypress', this.boundDelegator);\n        root.removeEventListener('keydown', this.boundDelegator);\n        root.removeEventListener('click', this.boundDelegator);\n        root.addEventListener('mousedown', this.boundDelegator);\n        window.addEventListener('mouseup', this.boundDelegator);\n    }\n\n    delegator(e: Event): void {\n        const eventType = e.type;\n        const fn = this['handle' + Util.pascalCase(eventType)];\n\n        if (typeof fn !== 'function') {\n            throw new Error(`[EventHandler] No handler found for event \"${eventType}\"`);\n        }\n\n        fn.call(this, e);\n    }\n\n    handleKeypress(e: KeyboardEvent): void {\n        e.preventDefault();\n\n        this.tome.applyAction({type: ActionType.INSERT, content: e.key});\n    }\n\n    handleMouseup(e: MouseEvent): void {\n        if (this.tome.dom.root !== document.activeElement) return;\n\n        this.tome.applyAction({type: ActionType.SET_SELECTION});\n    }\n\n    handleMousedown(e: MouseEvent): void {\n        this.tome.applyAction({type: ActionType.SET_SELECTION});\n    }\n\n    handleKeydown(e: KeyboardEvent): void {\n        const key = e.key.toLowerCase();\n\n        let action: IAction = {};\n\n        if (e.metaKey) {\n            switch (key) {\n                case Keypress.A:\n                    action = {type: ActionType.SET_SELECTION};\n\n                    break;\n                case Keypress.B:\n                    action = {type: ActionType.TOGGLE_INLINE, tag: MarkupTag.STRONG};\n\n                    e.preventDefault();\n\n                    break;\n                case Keypress.I:\n                    action = {type: ActionType.TOGGLE_INLINE, tag: MarkupTag.EM};\n\n                    e.preventDefault();\n\n                    break;\n                // case Keypress.C:\n                //    command = 'copy';\n\n                //     break;\n                // case Keypress.V:\n                //     command = 'paste';\n\n                //     break;\n                // case Keypress.S:\n                //     command = 'save';\n\n                //     break;\n                case Keypress.Z:\n                    e.preventDefault();\n\n                    return e.shiftKey ? this.tome.redo() : this.tome.undo();\n            }\n        }\n\n        switch (key) {\n            case Keypress.ENTER:\n                action = {type: e.shiftKey ? ActionType.SHIFT_RETURN : ActionType.RETURN};\n\n                e.preventDefault();\n\n                break;\n            case Keypress.BACKSPACE:\n                action = {type: ActionType.BACKSPACE};\n\n                e.preventDefault();\n\n                break;\n            case Keypress.DELETE:\n                action = {type: ActionType.DELETE};\n\n                e.preventDefault();\n\n                break;\n            case Keypress.ARROW_LEFT:\n            case Keypress.ARROW_RIGHT:\n            case Keypress.ARROW_UP:\n            case Keypress.ARROW_DOWN:\n                action = {type: ActionType.SET_SELECTION};\n\n                break;\n        }\n\n        if (!action || action.type === ActionType.NONE) return;\n\n        setTimeout(() => this.tome.applyAction(action), SELECTION_DELAY);\n    }\n}\n\nexport default EventHandler;\n\n\n// WEBPACK FOOTER //\n// ./src/EventHandler.ts","enum Keypress {\n    ENTER       = 'enter',\n    BACKSPACE   = 'backspace',\n    DELETE      = 'delete',\n    ARROW_UP    = 'arrowup',\n    ARROW_DOWN  = 'arrowdown',\n    ARROW_LEFT  = 'arrowleft',\n    ARROW_RIGHT = 'arrowright',\n    A           = 'a',\n    C           = 'c',\n    V           = 'v',\n    S           = 's',\n    Z           = 'z',\n    B           = 'b',\n    I           = 'i'\n}\n\nexport default Keypress\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/Keypress.ts","import TomeNode  from './models/TomeNode';\nimport Markup    from './models/Markup';\nimport MarkupTag from './constants/MarkupTag';\n\nclass TreeBuilder {\n    static build(root: TomeNode, text: string, markups: Array<Markup>): void {\n        const openMarkups: Array<Markup> = [];\n\n        let node:     TomeNode = root;\n        let textNode: TomeNode = null;\n\n        node.start = 0;\n        node.end   = text.length;\n\n        for (let i = 0; i <= text.length; i++) {\n            const reOpen: Array<Markup> = [];\n\n            let j: number;\n            let markup: Markup;\n            let hasOpened = false;\n            let hasClosed = false;\n\n            for (j = 0; (markup = markups[j]); j++) {\n                // Out of range, break\n\n                if (markup[1] > i) break;\n\n                // If markup end is before current index or is currently\n                // open, continue\n\n                if (markup[2] < i || openMarkups.indexOf(markup) > -1) continue;\n\n                // Markup opens at, or is open at index (and not in open\n                // markups array)\n\n                if (textNode) {\n                    // If open text node, close it before opening sibling\n\n                    textNode = TreeBuilder.closeTextNode(textNode, text, i);\n                }\n\n                // Open a new markup at index\n\n                const newNode = TreeBuilder.createNode(markup[0], node, i, markup[2]);\n\n                node.childNodes.push(newNode);\n\n                openMarkups.push(markup);\n\n                node = newNode;\n\n                hasOpened = true;\n            }\n\n            if (hasOpened) {\n                // A markup has been opened at index\n\n                if (textNode) {\n                    // A text node exists, close it\n\n                    textNode = TreeBuilder.closeTextNode(textNode, text, i);\n                } else {\n                    // A text node does not exist and we are now at a leaf,\n                    // so create one\n\n                    textNode = TreeBuilder.createTextNode(node, node.start);\n\n                    node.childNodes.push(textNode);\n                }\n            }\n\n            for (j = markups.length - 1; (markup = markups[j]); j--) {\n                if (markup[2] !== i) continue;\n\n                // Markup to be closed at index\n\n                if (textNode) {\n                    // A text node is open within the markup, close it and\n                    // nullify ref\n\n                    textNode = TreeBuilder.closeTextNode(textNode, text, i);\n                }\n\n                if (markup[1] === markup[2]) {\n                    // The markup is collapsed, and has closed immediately,\n                    // therefore nothing has opened at the index\n\n                    hasOpened = false;\n                }\n\n                // For each open markup, close it until the markup to be\n                // closed is found\n\n                while (openMarkups.length > 0) {\n                    const closed = openMarkups.pop();\n\n                    if (closed !== markup) {\n                        // If a child of the markup to be closed, push into\n                        // `reOpen` array\n\n                        reOpen.push(closed);\n                    }\n\n                    node.end = i;\n\n                    node = node.parent;\n\n                    // If at desired markup, break\n\n                    if (closed === markup) break;\n                }\n\n                // Mark that at least one markup has been closed at index\n\n                hasClosed = true;\n            }\n\n            while (reOpen.length > 0) {\n                // Reopen each markup in the `reOpen` array\n\n                markup = reOpen.pop();\n\n                const newNode = TreeBuilder.createNode(markup[0], node, i, markup[2]);\n\n                node.childNodes.push(newNode);\n\n                openMarkups.push(markup);\n\n                node = newNode;\n\n                hasOpened = true;\n            }\n\n            if ((i !== text.length && hasClosed && !hasOpened) || (hasOpened && !textNode)) {\n                // Node closed and nothing to be opened, or node (re)opened\n\n                textNode = TreeBuilder.createTextNode(node, i);\n\n                node.childNodes.push(textNode);\n            }\n        }\n    }\n\n    private static createTextNode(parent: TomeNode, start: number): TomeNode {\n        return TreeBuilder.createNode(MarkupTag.TEXT, parent, start, -1);\n    }\n\n    private static closeTextNode(textNode: TomeNode, text: string, end: number): null {\n        textNode.end = end;\n\n        textNode.text = text.slice(textNode.start, textNode.end);\n\n        return null;\n    }\n\n    private static createNode(tag: MarkupTag, parent: TomeNode, start: number, end: number): TomeNode {\n        const node = new TomeNode();\n\n        node.tag    = tag;\n        node.parent = parent;\n        node.start  = start;\n        node.end    = end;\n        node.path   = parent.path.slice();\n\n        node.path.push(parent.childNodes.length);\n\n        return node;\n    }\n}\n\nexport default TreeBuilder;\n\n\n// WEBPACK FOOTER //\n// ./src/TreeBuilder.ts","import MarkupTag from './constants/MarkupTag';\nimport TomeNode  from './models/TomeNode';\n\nclass Renderer {\n    static renderNodes(nodes: Array<TomeNode>, parent: TomeNode=null): string {\n        return nodes.map(node => Renderer.renderNode(node, parent)).join('');\n    }\n\n    private static renderNode(node: TomeNode, parent: TomeNode): string {\n        let html: string='';\n\n        if (node.tag !== MarkupTag.TEXT) {\n            html += '<' + node.tag + '>';\n        }\n\n        if (node.childNodes.length) {\n            html += Renderer.renderNodes(node.childNodes, node);\n        } else {\n            // Text leaf node\n\n            html += node.text.length ? node.text : '&#8203;';\n        }\n\n        if (parent && parent.childNodes[parent.childNodes.length - 1] === node && html.match(/ $/)) {\n            html += '&#8203;';\n        }\n\n        if (node.tag !== MarkupTag.TEXT) {\n            html += '</' + node.tag + '>';\n        }\n\n        return html;\n    }\n}\n\nexport default Renderer;\n\n\n// WEBPACK FOOTER //\n// ./src/Renderer.ts","import State        from './models/State';\nimport Util         from './Util';\nimport ActionType   from './constants/ActionType';\nimport Editor       from './Editor';\nimport Action       from './models/Action';\nimport Markup       from './models/Markup';\n\nexport default (prevState: State, action: Action): State => {\n    switch (action.type) {\n        case ActionType.SET_SELECTION: {\n            const nextState = Util.extend(new State(), prevState, true);\n\n            nextState.markups = prevState.markups.map(markup => new Markup(markup.toArray()));\n\n            Object.assign(nextState.selection, action.range);\n\n            Editor.setActiveMarkups(nextState, action.range);\n\n            return nextState;\n        }\n        case ActionType.INSERT: {\n            return Editor.insert(prevState, {from: action.range.from, to: action.range.to}, action.content);\n        }\n        case ActionType.BACKSPACE: {\n            const fromIndex = action.range.isCollapsed ? action.range.from - 1 : action.range.from;\n\n            // If at start, ignore\n\n            if (action.range.to === 0) return prevState;\n\n            return Editor.insert(prevState, {from: fromIndex, to: action.range.to}, '');\n        }\n        case ActionType.DELETE: {\n            const toIndex = action.range.isCollapsed ? action.range.from + 1 :  action.range.to;\n\n            // If at end, ignore\n\n            if (action.range.from === prevState.text.length) return prevState;\n\n            return Editor.insert(prevState, {from: action.range.from, to: toIndex}, '');\n        }\n        case ActionType.RETURN:\n            return Editor.insert(prevState, action.range, '\\n');\n        case ActionType.SHIFT_RETURN:\n\n            break;\n        case ActionType.TOGGLE_INLINE: {\n            let nextState: State;\n\n            // TODO: if collapsed, simply change state to disable/enable active\n            // markup, any further set selections will reset it as appropriate\n\n            if (prevState.isTagActive(action.tag)) {\n                nextState = Editor.removeInlineMarkup(prevState, action.tag, action.range.from, action.range.to);\n            } else {\n                nextState = Editor.addInlineMarkup(prevState, action.tag, action.range.from, action.range.to);\n            }\n\n            Editor.setActiveMarkups(nextState, action.range);\n\n            return nextState;\n        }\n        default:\n            return prevState;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/reducer.ts","import State         from './models/State';\nimport Markup        from './models/Markup';\nimport TomeSelection from './models/TomeSelection';\nimport ISelection    from './interfaces/ISelection';\nimport MarkupTag     from './constants/MarkupTag';\nimport Util          from './Util';\n\n/**\n * A static class of utility functions for performing edits to\n * the editor state.\n */\n\nclass Editor {\n    /**\n     * Inserts zero or more characters into a range, deleting\n     * the contents of the range. Adjusts all markups affected by\n     * insertion.\n     */\n\n    static insert(prevState: State, range: ISelection, content: string): State {\n        const nextState = new State();\n\n        const totalDeleted = range.to - range.from;\n\n        let before       = prevState.text.slice(0, range.from);\n        let after        = prevState.text.slice(range.to);\n        let totalAdded   = content.length;\n        let adjustment   = totalAdded - totalDeleted;\n        let totalTrimmed = 0;\n\n        nextState.text = before + content + after;\n\n        nextState.markups = Editor.adjustMarkups(\n            prevState.markups,\n            range.from,\n            range.to,\n            totalAdded,\n            adjustment\n        );\n\n        if (content === MarkupTag.LINE_BREAK) {\n            nextState.markups = Editor.splitMarkups(nextState.markups, range.from);\n\n            totalTrimmed = Editor.trimWhitespace(nextState, range.from);\n        } else if (content === '') {\n            nextState.markups = Editor.joinMarkups(nextState.markups, range.from);\n            nextState.markups = Editor.joinMarkups(nextState.markups, range.to);\n        }\n\n        nextState.selection.from =\n        nextState.selection.to   = range.from + totalAdded + totalTrimmed;\n\n        Editor.setActiveMarkups(nextState, nextState.selection);\n\n        return nextState;\n    }\n\n    static addInlineMarkup(prevState: State, tag: MarkupTag, from: number, to: number, markup: Markup=null): State {\n        const nextState: State = Util.extend(new State(), prevState, true);\n        const enveloped = prevState.envelopedBlockMarkups || [];\n\n        nextState.markups = prevState.markups.map(markup => new Markup(markup.toArray()));\n\n        let insertIndex = -1;\n\n        if (enveloped.length > 1) {\n            let formattedState = nextState;\n\n            // Split and delegate the command\n\n            formattedState.envelopedBlockMarkups.length = 0;\n\n            enveloped.forEach((markup, i) => {\n                const formatFrom = i === 0 ? from : markup[1];\n                const formatTo   = i === enveloped.length - 1 ? to : markup[2];\n\n                formattedState = Editor.addInlineMarkup(formattedState, tag, formatFrom, formatTo, markup);\n            });\n\n            return formattedState;\n        }\n\n        // Single block markup\n\n        markup = markup || enveloped[0];\n\n        if (markup) {\n            // ensure range does not extend over breaks\n            // around markups\n\n            from = from < markup[1] ? markup[1] : from;\n            to = to > markup[2] ? markup[2] : to;\n        }\n\n        // Remove all existing inline markups of type within range\n\n        Editor.ingestMarkups(nextState.markups, tag, from, to);\n\n        for (let i = 0, len = nextState.markups.length; i < len; i++) {\n            const markup = new Markup(nextState.markups[i].toArray());\n\n            // NB: When inserting an inline markup there should always be at\n            // least one block markup in the array\n\n            insertIndex = i;\n\n            if (markup.start > from) {\n                // Markup starts after markup to insert, insert at index\n\n                break;\n            } else if (i === len - 1) {\n                // Last markup, insert after\n\n                insertIndex++;\n\n                break;\n            }\n        }\n\n        nextState.markups.splice(insertIndex, 0, new Markup([tag, from, to]));\n\n        Editor.joinMarkups(nextState.markups, from);\n        Editor.joinMarkups(nextState.markups, to);\n\n        return nextState;\n    }\n\n    static removeInlineMarkup(prevState: State, tag: MarkupTag, from: number, to: number): State {\n        const nextState = Util.extend(new State(), prevState, true);\n        const enveloped = prevState.envelopedBlockMarkups || [];\n\n        nextState.markups = prevState.markups.map(markup => new Markup(markup.toArray()));\n\n        if (enveloped.length > 1) {\n            let formattedState = nextState;\n\n            // Split and delegate the command\n\n            formattedState.envelopedBlockMarkups.length = 0;\n\n            enveloped.forEach((markup, i) => {\n                const formatFrom = i === 0 ? from : markup.start;\n                const formatTo   = i === enveloped.length - 1 ? to : markup.end;\n\n                formattedState = Editor.removeInlineMarkup(formattedState, tag, formatFrom, formatTo);\n            });\n\n            return formattedState;\n        }\n\n        Editor.ingestMarkups(nextState.markups, tag, from, to);\n\n        return nextState;\n    }\n\n    static replaceBlockMarkup() {\n\n    }\n\n    /**\n     * Adjusts the position/length of existing markups in\n     * response to characters being added/removed.\n     */\n\n    static adjustMarkups(markups: Array<Markup>, fromIndex: number, toIndex: number, totalAdded: number, adjustment: number): Array<Markup> {\n        const newMarkups: Array<Markup> = [];\n\n        for (let i = 0, markup: Markup; (markup = markups[i]); i++) {\n            const newMarkup = new Markup(markup.toArray());\n\n            let removeMarkup = false;\n\n            if (markup.start >= fromIndex && markup.end <= toIndex) {\n                // Selection completely envelopes markup\n\n                if (markup.start === fromIndex && (markup.isBlock || markup.isInline && totalAdded > 0)) {\n                    // Markup should be preserved is a) is block element,\n                    // b) is inline and inserting\n                    newMarkup[2] = markup.start + totalAdded;\n                } else if (!markup.isBlock || markup.start > fromIndex) {\n                    removeMarkup = true;\n                }\n            } else if (markup.start <= fromIndex && markup.end >= toIndex) {\n                // Selection within markup or equal to markup\n\n                newMarkup[2] += adjustment;\n\n                if (markup.isInline && (markup.start === fromIndex && fromIndex === toIndex)) {\n                    // Collapsed caret at start of inline markup\n\n                    newMarkup[1] += adjustment;\n                }\n            } else if (markup.start >= toIndex) {\n                // Markup starts after Selection\n\n                newMarkup[1] += adjustment;\n                newMarkup[2] += adjustment;\n            } else if (fromIndex < markup.start && toIndex > markup.start && toIndex < markup.end) {\n                // Selection partially envelopes markup from start\n\n                if (markup.isInline) {\n                    newMarkup[1] += (adjustment + (toIndex - markup.start));\n                    newMarkup[2] += adjustment;\n                } else {\n                    // Previous block markup will consume this one, remove\n\n                    removeMarkup = true;\n                }\n            } else if (fromIndex > markup.start && fromIndex < markup.end && toIndex > markup.end) {\n                // Selection partially envelopes markup from end\n\n                if (markup.isInline) {\n                    // Extend inline markup to end of insertion\n\n                    newMarkup[2] = fromIndex + totalAdded;\n                } else {\n                    const closingBlockMarkup = Editor.getClosingBlockMarkup(markups, i, toIndex);\n\n                    // Extend block markup to end of closing block +/-\n                    // adjustment\n\n                    newMarkup[2] = closingBlockMarkup[2] + adjustment;\n                }\n            }\n\n            if (!removeMarkup) {\n                newMarkups.push(newMarkup);\n            }\n        }\n\n        return newMarkups;\n    }\n\n    /**\n     * Returns the closing block markup after the markup at the\n     * provided index.\n     */\n\n    static getClosingBlockMarkup(markups: Array<Markup>, markupIndex: number, toIndex: number): Markup {\n        for (let i = markupIndex + 1, markup; (markup = markups[i]); i++) {\n            if (!(markup instanceof Markup)) {\n                markup = new Markup(markup);\n            }\n\n            if (markup.isBlock && markup.start <= toIndex && markup.end >= toIndex) {\n                return markup;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Trims leading/trailing whitespace from block elements\n     * when a block is split.\n     *\n     * Returns the total adjustment made to the text before the split.\n     */\n\n    static trimWhitespace(nextState: State, splitIndex: number): number {\n        let totalAllTrimmed = 0;\n        let caretAdjustment = 0;\n        let trimmedIndex    = -1;\n\n        for (let i = 0; i < nextState.markups.length; i++) {\n            const markupRaw = nextState.markups[i];\n\n            if (totalAllTrimmed !== 0 && markupRaw[1] >= trimmedIndex) {\n                // If previous adjustments have been made, adjust\n                // subsequent markups' positions accordingly\n\n                markupRaw[1] += totalAllTrimmed;\n                markupRaw[2] += totalAllTrimmed;\n            }\n\n            const markup = new Markup(markupRaw.toArray());\n\n            if (!markup.isBlock) continue;\n\n            const before  = nextState.text.slice(0, markup.start);\n            const content = nextState.text.slice(markup.start, markup.end);\n            const after   = nextState.text.slice(markup.end);\n\n            let trimmed = content;\n\n            // Trim whitespace from start and end of blocks\n\n            if (trimmed.charAt(0) === ' ') {\n                trimmedIndex = markup.start;\n\n                trimmed = trimmed.slice(1);\n            }\n\n            if (trimmed.charAt(trimmed.length - 1) === ' ') {\n                trimmedIndex = markup.end - 1;\n\n                trimmed = trimmed.slice(0, -1);\n            }\n\n            const totalTrimmed = trimmed.length - content.length;\n\n            if (totalTrimmed === 0) continue;\n\n            totalAllTrimmed += totalTrimmed;\n\n            if (markup.start < splitIndex) {\n                // If the affected markup starts before the split index,\n                // increase the total\n\n                caretAdjustment += totalTrimmed;\n            }\n\n            // Reduce markup end by trimmed amount\n\n            markupRaw[2] += totalTrimmed;\n\n            // Rebuild text\n\n            nextState.text = before + trimmed + after;\n        }\n\n        return caretAdjustment;\n    }\n\n    /**\n     * Splits a markup at the provided index, creating a new markup\n     * of the same type starting a character later. Assumes the addition\n     * of a single new line character, but this could be provided for\n     * further flexibility.\n     */\n\n    static splitMarkups(markups: Array<Markup>, index: number): Array<Markup> {\n        for (let i = 0; i < markups.length; i++) {\n            const markup = markups[i];\n            const originalMarkupEnd = markup.end;\n\n            let newMarkup = null;\n\n            if (markup.start < index && markup.end > index) {\n                const newStartIndex = index + 1;\n                const newTag = markup.isBlock && markup.end === newStartIndex ? MarkupTag.P : markup.tag;\n\n                let j = i + 1;\n                let insertIndex = -1;\n\n                // Contract markup\n\n                markup[2] = index;\n\n                newMarkup = new Markup([newTag, newStartIndex, originalMarkupEnd]);\n\n                // Find appropriate insertion index\n\n                for (; j < markups.length; j++) {\n                    const siblingMarkup = markups[j];\n\n                    if (siblingMarkup.start === newStartIndex) {\n                        insertIndex = newMarkup.isBlock ? j : j + 1;\n\n                        break;\n                    } else if (siblingMarkup.start > newStartIndex) {\n                        insertIndex = j;\n\n                        break;\n                    }\n                }\n\n                if (insertIndex < 0) {\n                    // If no insert index found, insert at end\n\n                    insertIndex = j;\n                }\n\n                markups.splice(insertIndex, 0, newMarkup);\n\n                // if (insertIndex === j) {\n                //     i = insertIndex;\n                // }\n            }\n        }\n\n        return markups;\n    }\n\n    /**\n     * Joins two adjacent markups at a provided (known) index.\n     */\n\n    static joinMarkups(markups: Array<Markup>, index: number): Array<Markup> {\n        const closingInlines = {};\n\n        // TODO: use quick search to find start index\n\n        let closingBlock = null;\n\n        for (let i = 0; i < markups.length; i++) {\n            const markup = new Markup(markups[i].toArray());\n\n            if (markup.end === index) {\n                if (markup.isBlock) {\n                    // Block markup closes at index\n\n                    closingBlock = markups[i];\n                } else {\n                    closingInlines[markup.tag] = markups[i];\n                }\n            } else if (markup.start === index) {\n                let extend = null;\n\n                if (markup.isBlock && closingBlock) {\n                    // Block markup opens at index, and will touch\n                    // previous block\n\n                    extend = closingBlock;\n                } else if (markup.isInline && closingInlines[markup.tag]) {\n                    extend = closingInlines[markup.tag];\n                }\n\n                if (extend) {\n                    // Markup should be extended\n\n                    extend[2] = markup[2];\n\n                    markups.splice(i, 1);\n\n                    i--;\n                }\n            } else if (markup.start > index) {\n                // Passed joining index, done\n\n                break;\n            }\n        }\n\n        return markups;\n    }\n\n    /**\n     * Removes or shortens any markups matching the provided tag within the\n     * provided range.\n     */\n\n    static ingestMarkups(markups: Array<Markup>, tag: MarkupTag, from: number, to: number): void {\n        for (let i = 0, markup; (markup = markups[i]); i++) {\n            const [markupTag, markupStart, markupEnd] = markup;\n\n            if (markupTag !== tag) continue;\n\n            if (markupStart >= from && markupEnd <= to) {\n                // Markup enveloped, remove\n\n                markups.splice(i, 1);\n\n                i--;\n            } else if (markupStart < from && markupEnd >= to) {\n                // Markup overlaps start, shorten by moving end to\n                // start of selection\n\n                if (markupEnd > to) {\n                    // Split markup into two\n\n                    const newMarkup = new Markup([markupTag, to, markupEnd]);\n\n                    markups.splice(i + 1, 0, newMarkup);\n\n                    i++;\n                }\n\n                markup[2] = from;\n            } else if (markupStart > from && markupStart < to) {\n                // Markup overlaps end, shorten by moving start to\n                // end of selection\n\n                markup[1] = to;\n            } else if (markupStart === from && markupEnd > to) {\n                // Markup envelops range from start\n\n                markup[1] = to;\n            }\n        }\n    }\n\n    /**\n     * Determines which block and inline markups should be \"active\"\n     * or \"enveloped\" for particular selection.\n     */\n\n    static setActiveMarkups(state: State, range: TomeSelection): void {\n        state.activeBlockMarkup = null;\n\n        state.activeInlineMarkups.length   =\n        state.envelopedBlockMarkups.length = 0;\n\n        const adjacentInlineMarkups = [];\n\n        let parentBlock: Markup = null;\n\n        for (let i = 0; i < state.markups.length; i++) {\n            const markup = new Markup(state.markups[i].toArray());\n            const lastAdjacent = adjacentInlineMarkups[adjacentInlineMarkups.length - 1];\n\n            // Active markups are those that surround the start of the\n            // selection and should be highlighted in any UI\n\n            if (markup.start <= range.from && markup.end >= range.from) {\n                if (markup.isBlock) {\n                    // Only one block markup may be active at a time\n                    // (the first one)\n\n                    state.activeBlockMarkup = markup;\n                } else if (markup.end >= range.to) {\n                    // Simple enveloped inline markup\n\n                    state.activeInlineMarkups.push(markup);\n                } else if (markup.end === parentBlock.end) {\n                    // Potential first adjacent inline markup\n\n                    adjacentInlineMarkups.push(markup);\n\n                    continue;\n                }\n            }\n\n            if (\n                lastAdjacent && lastAdjacent.tag === markup.tag &&\n                (\n                    markup.start === parentBlock.start && markup.end >= range.to ||\n                    markup.start === parentBlock.start && markup.end === parentBlock.end\n                )\n            ) {\n                // Continuation or end of an adjacent inline markup\n\n                adjacentInlineMarkups.push(markup);\n\n                if (range.to <= markup.end) {\n                    // Final adjacent inline markup, move all to state\n\n                    state.activeInlineMarkups.push(...adjacentInlineMarkups);\n                }\n            } else if (markup.isInline) {\n                // Doesn't match tag, or not a continuation, reset\n\n                adjacentInlineMarkups.length = 0;\n            }\n\n            if (!markup.isBlock) continue;\n\n            parentBlock = markup;\n\n            // Enveloped block markups are those that are partially or\n            // completely enveloped by the selection.\n\n            if (\n                // overlapping end\n\n                (range.from >= markup.start && range.from < markup.end) ||\n\n                // overlapping start\n\n                (range.to > markup.start && range.to <= markup.end) ||\n\n                // enveloped\n\n                (range.from <= markup.start && range.to >= markup.end)\n            ) {\n                state.envelopedBlockMarkups.push(markup);\n            }\n        }\n    }\n}\n\nexport default Editor;\n\n\n// WEBPACK FOOTER //\n// ./src/Editor.ts"],"sourceRoot":""}